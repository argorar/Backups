{"created_by":"Tampermonkey","version":"1","scripts":[{"name":"4chan X","options":{"check_for_updates":true,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":true,"compat_metadata":false,"compat_foreach":false,"compat_arrayleft":false,"compat_uW_gmonkey":false,"compat_forvarin":false,"noframes":null,"awareOfChrome":false,"run_at":null,"override":{"use_includes":[],"orig_includes":["http://boards.4chan.org/*","https://boards.4chan.org/*","http://sys.4chan.org/*","https://sys.4chan.org/*","http://www.4chan.org/*","https://www.4chan.org/*","http://boards.4channel.org/*","https://boards.4channel.org/*","http://sys.4channel.org/*","https://sys.4channel.org/*","http://www.4channel.org/*","https://www.4channel.org/*","http://i.4cdn.org/*","https://i.4cdn.org/*","http://is.4chan.org/*","https://is.4chan.org/*","http://is2.4chan.org/*","https://is2.4chan.org/*","http://is.4channel.org/*","https://is.4channel.org/*","http://is2.4channel.org/*","https://is2.4channel.org/*","https://erischan.org/*","https://www.erischan.org/*","https://fufufu.moe/*","https://gnfos.com/*","https://himasugi.blog/*","https://www.himasugi.blog/*","https://kakashi-nenpo.com/*","https://www.kakashi-nenpo.com/*","https://kissu.moe/*","https://www.kissu.moe/*","https://lainchan.org/*","https://www.lainchan.org/*","https://merorin.com/*","https://ota-ch.com/*","https://www.ota-ch.com/*","https://ponyville.us/*","https://www.ponyville.us/*","https://samachan.org/*","https://smuglo.li/*","https://notso.smuglo.li/*","https://smugloli.net/*","https://smug.nepu.moe/*","https://sportschan.org/*","https://www.sportschan.org/*","https://sushigirl.us/*","https://www.sushigirl.us/*","https://tvch.moe/*","https://www.google.com/recaptcha/api2/anchor?k=6Ldp2bsSAAAAAAJ5uyx_lx34lJeEpTLVkP5k04qc*","https://www.google.com/recaptcha/api2/frame?*&k=6Ldp2bsSAAAAAAJ5uyx_lx34lJeEpTLVkP5k04qc*","https://www.google.com/recaptcha/api2/frame?*&k=887877714&*","https://www.google.com/recaptcha/api2/bframe?*&k=6Ldp2bsSAAAAAAJ5uyx_lx34lJeEpTLVkP5k04qc*","http://www.google.com/recaptcha/api/fallback?k=6Ldp2bsSAAAAAAJ5uyx_lx34lJeEpTLVkP5k04qc*","https://www.google.com/recaptcha/api/fallback?k=6Ldp2bsSAAAAAAJ5uyx_lx34lJeEpTLVkP5k04qc*"],"merge_includes":true,"use_matches":[],"orig_matches":[],"merge_matches":true,"use_excludes":[],"orig_excludes":["http://www.4chan.org/advertise","https://www.4chan.org/advertise","http://www.4chan.org/advertise?*","https://www.4chan.org/advertise?*","http://www.4chan.org/donate","https://www.4chan.org/donate","http://www.4chan.org/donate?*","https://www.4chan.org/donate?*","http://www.4channel.org/advertise","https://www.4channel.org/advertise","http://www.4channel.org/advertise?*","https://www.4channel.org/advertise?*","http://www.4channel.org/donate","https://www.4channel.org/donate","http://www.4channel.org/donate?*","https://www.4channel.org/donate?*"],"merge_excludes":true,"use_connects":[],"merge_connects":true,"use_blockers":[],"orig_run_at":"document-start","orig_noframes":null,"orig_connects":["4chan.org","4channel.org","4cdn.org","nstepien.github.io","archive.4plebs.org","archive.nyafuu.org","archive.rebeccablacktech.com","warosu.org","desuarchive.org","boards.fireden.net","arch.b4k.co","archive.b-stats.org","archived.moe","thebarchive.com","archiveofsins.com","api.clyp.it","api.dailymotion.com","api.github.com","soundcloud.com","api.streamable.com","vimeo.com","noembed.com","*"]}},"storage":{"data":{"4chan X.watchedThreads":"s{\"version\":1161,\"4chan.org\":{\"boards\":{\"wg\":{\"6863768\":{\"excerpt\":\"/wg/ - /html-css/ HTML-CSS General #6\",\"isDead\":true},\"6870690\":{\"excerpt\":\"/wg/ - This is the desktop ricing thread. // Post your riced desktops ...\",\"isDead\":true,\"unread\":5,\"quotingYou\":false},\"6870705\":{\"excerpt\":\"/wg/ - /dtg/ - desktop general\",\"isDead\":true,\"unread\":9,\"quotingYou\":false}},\"w\":{\"1999257\":{\"excerpt\":\"/w/ - Desktops\",\"isDead\":true,\"unread\":0,\"quotingYou\":false}}},\"lastChecked\":1548695321244},\"lastChecked\":1588630300618,\"lastChecked2\":1588628335115}","4chan X.previousversion":"s\"1.14.18.1\"","4chan X.boardConfig":"s{\"boards\":{\"3\":{\"board\":\"3\",\"title\":\"3DCG\",\"ws_board\":1,\"per_page\":15,\"pages\":10,\"max_filesize\":4194304,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":310,\"image_limit\":150,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":60},\"meta_description\":\"&quot;/3/ - 3DCG&quot; is 4chan's board for 3D modeling and imagery.\",\"is_archived\":1},\"a\":{\"board\":\"a\",\"title\":\"Anime & Manga\",\"ws_board\":1,\"per_page\":15,\"pages\":10,\"max_filesize\":4194304,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":500,\"image_limit\":300,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":60},\"meta_description\":\"&quot;/a/ - Anime &amp; Manga&quot; is 4chan's imageboard dedicated to the discussion of Japanese animation and manga.\",\"spoilers\":1,\"custom_spoilers\":1,\"is_archived\":1},\"aco\":{\"board\":\"aco\",\"title\":\"Adult Cartoons\",\"ws_board\":0,\"per_page\":15,\"pages\":10,\"max_filesize\":4194304,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":300,\"image_limit\":300,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":30},\"meta_description\":\"&quot;/aco/ - Adult Cartoons&quot; is 4chan's imageboard for posting western-styled adult cartoon artwork.\",\"is_archived\":1},\"adv\":{\"board\":\"adv\",\"title\":\"Advice\",\"ws_board\":1,\"per_page\":15,\"pages\":10,\"max_filesize\":4194304,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":310,\"image_limit\":150,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":60},\"meta_description\":\"&quot;/adv/ - Advice&quot; is 4chan's board for giving and receiving advice. \",\"is_archived\":1},\"an\":{\"board\":\"an\",\"title\":\"Animals & Nature\",\"ws_board\":1,\"per_page\":15,\"pages\":10,\"max_filesize\":4194304,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":310,\"image_limit\":150,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":60},\"meta_description\":\"&quot;/an/ - Animals &amp; Nature&quot; is 4chan's imageboard for posting pictures of animals, pets, and nature.\",\"is_archived\":1},\"asp\":{\"board\":\"asp\",\"title\":\"Alternative Sports & Wrestling\",\"ws_board\":1,\"per_page\":15,\"pages\":10,\"max_filesize\":4194304,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":310,\"image_limit\":150,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":60},\"meta_description\":\"&quot;/asp/ - Alternative Sports &amp; Wrestling&quot; is 4chan's imageboard for the discussion of alternative and extreme sports such as wrestling and paintball.\",\"is_archived\":1},\"b\":{\"board\":\"b\",\"title\":\"Random\",\"ws_board\":0,\"per_page\":15,\"pages\":10,\"max_filesize\":2097152,\"max_webm_filesize\":2097152,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":300,\"image_limit\":150,\"cooldowns\":{\"threads\":90,\"replies\":30,\"images\":30},\"meta_description\":\"&quot;/b/ - Random&quot; is the birthplace of Anonymous, and where people go to discuss random topics and create memes on 4chan.\",\"forced_anon\":1},\"bant\":{\"board\":\"bant\",\"title\":\"International/Random\",\"ws_board\":0,\"per_page\":15,\"pages\":10,\"max_filesize\":2097152,\"max_webm_filesize\":2097152,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":300,\"image_limit\":150,\"cooldowns\":{\"threads\":60,\"replies\":15,\"images\":15},\"meta_description\":\"&quot;/bant/ - International/Random&quot; is 4chan's international hanging out board, where you can have fun with Anonymous all over the world.\",\"user_ids\":1,\"country_flags\":1},\"biz\":{\"board\":\"biz\",\"title\":\"Business & Finance\",\"ws_board\":1,\"per_page\":15,\"pages\":10,\"max_filesize\":4194304,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":310,\"image_limit\":150,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":60},\"meta_description\":\"&quot;/biz/ - Business &amp; Finance&quot; is 4chan's imageboard for the discussion of business and finance, and cryptocurrencies such as Bitcoin and Dogecoin.\",\"user_ids\":1,\"is_archived\":1},\"c\":{\"board\":\"c\",\"title\":\"Anime/Cute\",\"ws_board\":1,\"per_page\":15,\"pages\":10,\"max_filesize\":4194304,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":310,\"image_limit\":150,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":60},\"meta_description\":\"&quot;/c/ - Anime/Cute&quot; is 4chan's imageboard for cute and moe anime images.\",\"is_archived\":1},\"cgl\":{\"board\":\"cgl\",\"title\":\"Cosplay & EGL\",\"ws_board\":1,\"per_page\":15,\"pages\":10,\"max_filesize\":4194304,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":310,\"image_limit\":150,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":60},\"meta_description\":\"&quot;/cgl/ - Cosplay &amp; EGL&quot; is 4chan's imageboard for the discussion of cosplay, elegant gothic lolita (EGL), and anime conventions.\",\"is_archived\":1},\"ck\":{\"board\":\"ck\",\"title\":\"Food & Cooking\",\"ws_board\":1,\"per_page\":15,\"pages\":10,\"max_filesize\":4194304,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":310,\"image_limit\":150,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":60},\"meta_description\":\"&quot;/ck/ - Food &amp; Cooking&quot; is 4chan's imageboard for food pictures and cooking recipes.\",\"is_archived\":1},\"cm\":{\"board\":\"cm\",\"title\":\"Cute/Male\",\"ws_board\":1,\"per_page\":15,\"pages\":10,\"max_filesize\":4194304,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":310,\"image_limit\":150,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":60},\"meta_description\":\"&quot;/cm/ - Cute/Male&quot; is 4chan's imageboard for posting pictures of cute anime males.\",\"is_archived\":1},\"co\":{\"board\":\"co\",\"title\":\"Comics & Cartoons\",\"ws_board\":1,\"per_page\":15,\"pages\":10,\"max_filesize\":4194304,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":500,\"image_limit\":300,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":60},\"meta_description\":\"&quot;/co/ - Comics &amp; Cartoons&quot; is 4chan's imageboard dedicated to the discussion of Western cartoons and comics.\",\"spoilers\":1,\"custom_spoilers\":5,\"is_archived\":1},\"d\":{\"board\":\"d\",\"title\":\"Hentai/Alternative\",\"ws_board\":0,\"per_page\":15,\"pages\":10,\"max_filesize\":4194304,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":300,\"image_limit\":300,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":30},\"meta_description\":\"&quot;/d/ - Hentai/Alternative&quot; is 4chan's imageboard for alternative hentai images.\",\"is_archived\":1},\"diy\":{\"board\":\"diy\",\"title\":\"Do It Yourself\",\"ws_board\":1,\"per_page\":15,\"pages\":10,\"max_filesize\":4194304,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":310,\"image_limit\":150,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":60},\"meta_description\":\"&quot;/diy/ - Do It Yourself&quot; is 4chan's imageboard for DIY/do it yourself projects, home improvement, and makers.\",\"is_archived\":1},\"e\":{\"board\":\"e\",\"title\":\"Ecchi\",\"ws_board\":0,\"per_page\":15,\"pages\":10,\"max_filesize\":4194304,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":300,\"image_limit\":300,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":30},\"meta_description\":\"&quot;/e/ - Ecchi&quot; is 4chan's imageboard for suggestive (ecchi) hentai images.\",\"is_archived\":1},\"f\":{\"board\":\"f\",\"title\":\"Flash\",\"ws_board\":0,\"per_page\":30,\"pages\":1,\"max_filesize\":10485760,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":300,\"image_limit\":300,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":30},\"meta_description\":\"&quot;/f/ - Flash&quot; is 4chan's upload board for sharing Adobe Flash files (SWFs).\"},\"fa\":{\"board\":\"fa\",\"title\":\"Fashion\",\"ws_board\":1,\"per_page\":15,\"pages\":10,\"max_filesize\":4194304,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":310,\"image_limit\":150,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":60},\"meta_description\":\"&quot;/fa/ - Fashion&quot; is 4chan's imageboard for images and discussion relating to fashion and apparel.\",\"is_archived\":1},\"fit\":{\"board\":\"fit\",\"title\":\"Fitness\",\"ws_board\":1,\"per_page\":15,\"pages\":10,\"max_filesize\":4194304,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":310,\"image_limit\":150,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":60},\"meta_description\":\"&quot;/fit/ - Fitness&quot; is 4chan's imageboard for weightlifting, health, and fitness.\",\"is_archived\":1},\"g\":{\"board\":\"g\",\"title\":\"Technology\",\"ws_board\":1,\"per_page\":15,\"pages\":10,\"max_filesize\":4194304,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":310,\"image_limit\":150,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":60},\"meta_description\":\"&quot;/g/ - Technology&quot; is 4chan's imageboard for discussing computer hardware and software, programming, and general technology.\",\"is_archived\":1,\"code_tags\":1},\"gd\":{\"board\":\"gd\",\"title\":\"Graphic Design\",\"ws_board\":1,\"per_page\":15,\"pages\":10,\"max_filesize\":8388608,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":310,\"image_limit\":150,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":60},\"meta_description\":\"&quot;/gd/ - Graphic Design&quot; is 4chan's imageboard for graphic design.\",\"is_archived\":1},\"gif\":{\"board\":\"gif\",\"title\":\"Adult GIF\",\"ws_board\":0,\"per_page\":15,\"pages\":10,\"max_filesize\":4194304,\"max_webm_filesize\":4194304,\"max_comment_chars\":2000,\"max_webm_duration\":300,\"bump_limit\":300,\"image_limit\":300,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":30},\"meta_description\":\"&quot;/gif/ - Adult GIF&quot; is 4chan's imageboard dedicated to animated adult GIFs and WEBMs.\",\"is_archived\":1,\"webm_audio\":1},\"h\":{\"board\":\"h\",\"title\":\"Hentai\",\"ws_board\":0,\"per_page\":15,\"pages\":10,\"max_filesize\":4194304,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":300,\"image_limit\":300,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":30},\"meta_description\":\"&quot;/h/ - Hentai&quot; is 4chan's imageboard for adult Japanese anime hentai images.\",\"is_archived\":1},\"hc\":{\"board\":\"hc\",\"title\":\"Hardcore\",\"ws_board\":0,\"per_page\":15,\"pages\":10,\"max_filesize\":8388608,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":300,\"image_limit\":300,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":30},\"meta_description\":\"&quot;/hc/ - Hardcore&quot; is 4chan's imageboard for the posting of adult hardcore pornography.\",\"is_archived\":1,\"min_image_width\":500,\"min_image_height\":500},\"his\":{\"board\":\"his\",\"title\":\"History & Humanities\",\"ws_board\":1,\"per_page\":15,\"pages\":10,\"max_filesize\":4194304,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":310,\"image_limit\":150,\"cooldowns\":{\"threads\":60,\"replies\":15,\"images\":15},\"meta_description\":\"&quot;/his/ - History &amp; Humanities&quot; is 4chan's board for discussing and debating history.\",\"is_archived\":1},\"hm\":{\"board\":\"hm\",\"title\":\"Handsome Men\",\"ws_board\":0,\"per_page\":15,\"pages\":10,\"max_filesize\":8388608,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":300,\"image_limit\":150,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":30},\"meta_description\":\"&quot;/hm/ - Handsome Men&quot; is 4chan's imageboard dedicated to sharing adult images of handsome men.\",\"is_archived\":1},\"hr\":{\"board\":\"hr\",\"title\":\"High Resolution\",\"ws_board\":0,\"per_page\":15,\"pages\":10,\"max_filesize\":8388608,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":300,\"image_limit\":300,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":30},\"meta_description\":\"&quot;/hr/ - High Resolution&quot; is 4chan's imageboard for the sharing of high resolution images.\",\"is_archived\":1,\"min_image_width\":1000,\"min_image_height\":1000},\"i\":{\"board\":\"i\",\"title\":\"Oekaki\",\"ws_board\":0,\"per_page\":15,\"pages\":10,\"max_filesize\":4194304,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":300,\"image_limit\":300,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":30},\"meta_description\":\"&quot;/i/ - Oekaki&quot; is 4chan's oekaki board for drawing and sharing art.\",\"is_archived\":1,\"oekaki\":1},\"ic\":{\"board\":\"ic\",\"title\":\"Artwork/Critique\",\"ws_board\":0,\"per_page\":15,\"pages\":10,\"max_filesize\":4194304,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":300,\"image_limit\":300,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":30},\"meta_description\":\"&quot;/ic/ - Artwork/Critique&quot; is 4chan's imageboard for the discussion and critique of art.\",\"is_archived\":1},\"int\":{\"board\":\"int\",\"title\":\"International\",\"ws_board\":1,\"per_page\":15,\"pages\":10,\"max_filesize\":4194304,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":310,\"image_limit\":150,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":60},\"meta_description\":\"&quot;/int/ - International&quot; is 4chan's international board, for the exchange of foreign language and culture.\",\"is_archived\":1,\"country_flags\":1},\"jp\":{\"board\":\"jp\",\"title\":\"Otaku Culture\",\"ws_board\":1,\"per_page\":15,\"pages\":10,\"max_filesize\":4194304,\"max_webm_filesize\":3145728,\"max_comment_chars\":5000,\"max_webm_duration\":120,\"bump_limit\":310,\"image_limit\":300,\"cooldowns\":{\"threads\":3600,\"replies\":60,\"images\":60},\"meta_description\":\"&quot;/jp/ - Otaku Culture&quot; is 4chan's board for discussing Japanese otaku culture.\",\"spoilers\":1,\"custom_spoilers\":1,\"is_archived\":1,\"sjis_tags\":1},\"k\":{\"board\":\"k\",\"title\":\"Weapons\",\"ws_board\":1,\"per_page\":15,\"pages\":10,\"max_filesize\":4194304,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":310,\"image_limit\":150,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":60},\"meta_description\":\"&quot;/k/ - Weapons&quot; is 4chan's imageboard for discussing all types of weaponry, from military tanks to guns and knives.\",\"is_archived\":1},\"lgbt\":{\"board\":\"lgbt\",\"title\":\"LGBT\",\"ws_board\":1,\"per_page\":15,\"pages\":10,\"max_filesize\":4194304,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":310,\"image_limit\":150,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":60},\"meta_description\":\"&quot;/lgbt/ - LGBT&quot; is 4chan's imageboard for Lesbian-Gay-Bisexual-Transgender-Queer and sexuality discussion.\",\"is_archived\":1},\"lit\":{\"board\":\"lit\",\"title\":\"Literature\",\"ws_board\":1,\"per_page\":15,\"pages\":10,\"max_filesize\":4194304,\"max_webm_filesize\":3145728,\"max_comment_chars\":3000,\"max_webm_duration\":120,\"bump_limit\":310,\"image_limit\":150,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":60},\"meta_description\":\"&quot;/lit/ - Literature&quot; is 4chan's board for the discussion of books, authors, and literature.\",\"spoilers\":1,\"custom_spoilers\":1,\"is_archived\":1},\"m\":{\"board\":\"m\",\"title\":\"Mecha\",\"ws_board\":1,\"per_page\":15,\"pages\":10,\"max_filesize\":4194304,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":310,\"image_limit\":150,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":60},\"meta_description\":\"&quot;/m/ - Mecha&quot; is 4chan's imageboard for discussing Japanese mecha robots and anime, like Gundam and Macross.\",\"spoilers\":1,\"custom_spoilers\":4,\"is_archived\":1},\"mlp\":{\"board\":\"mlp\",\"title\":\"Pony\",\"ws_board\":1,\"per_page\":15,\"pages\":10,\"max_filesize\":4194304,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":500,\"image_limit\":300,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":60},\"meta_description\":\"&quot;/mlp/ - Pony&quot; is 4chan's imageboard dedicated to the discussion of My Little Pony: Friendship is Magic.\",\"spoilers\":1,\"custom_spoilers\":1,\"is_archived\":1},\"mu\":{\"board\":\"mu\",\"title\":\"Music\",\"ws_board\":1,\"per_page\":15,\"pages\":10,\"max_filesize\":4194304,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":310,\"image_limit\":150,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":60},\"meta_description\":\"&quot;/mu/ - Music&quot; is 4chan's imageboard for discussing all types of music.\",\"is_archived\":1},\"n\":{\"board\":\"n\",\"title\":\"Transportation\",\"ws_board\":1,\"per_page\":15,\"pages\":10,\"max_filesize\":4194304,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":310,\"image_limit\":150,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":60},\"meta_description\":\"&quot;/n/ - Transportation&quot; is 4chan's imageboard for discussing modes of transportation like trains and bicycles.\",\"is_archived\":1},\"news\":{\"board\":\"news\",\"title\":\"Current News\",\"ws_board\":1,\"per_page\":15,\"pages\":10,\"max_filesize\":4194304,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":500,\"image_limit\":300,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":60},\"meta_description\":\"&quot;/news/ - Current News; is 4chan's board for current news. \",\"spoilers\":1,\"custom_spoilers\":1,\"is_archived\":1,\"text_only\":1,\"require_subject\":1},\"o\":{\"board\":\"o\",\"title\":\"Auto\",\"ws_board\":1,\"per_page\":15,\"pages\":10,\"max_filesize\":4194304,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":310,\"image_limit\":150,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":60},\"meta_description\":\"&quot;/o/ - Auto&quot; is 4chan's imageboard for discussing cars and motorcycles.\",\"is_archived\":1},\"out\":{\"board\":\"out\",\"title\":\"Outdoors\",\"ws_board\":1,\"per_page\":15,\"pages\":10,\"max_filesize\":5242880,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":310,\"image_limit\":150,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":60},\"meta_description\":\"&quot;/out/ - Outdoors&quot; is 4chan's imageboard for discussing survivalist skills and outdoor activities such as hiking.\",\"is_archived\":1},\"p\":{\"board\":\"p\",\"title\":\"Photography\",\"ws_board\":1,\"per_page\":15,\"pages\":10,\"max_filesize\":5242880,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":310,\"image_limit\":150,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":60},\"meta_description\":\"&quot;/p/ - Photography&quot; is 4chan's imageboard for sharing and critiquing photos.\",\"is_archived\":1},\"po\":{\"board\":\"po\",\"title\":\"Papercraft & Origami\",\"ws_board\":1,\"per_page\":15,\"pages\":10,\"max_filesize\":8388608,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":310,\"image_limit\":150,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":60},\"meta_description\":\"&quot;/po/ - Papercraft &amp; Origami&quot; is 4chan's imageboard for posting papercraft and origami templates and instructions.\",\"is_archived\":1},\"pol\":{\"board\":\"pol\",\"title\":\"Politically Incorrect\",\"ws_board\":0,\"per_page\":20,\"pages\":10,\"max_filesize\":4194304,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":300,\"image_limit\":300,\"cooldowns\":{\"threads\":90,\"replies\":30,\"images\":30},\"meta_description\":\"&quot;/pol/ - Politically Incorrect&quot; is 4chan's board for discussing and debating politics and current events.\",\"user_ids\":1,\"is_archived\":1,\"troll_flags\":1},\"qa\":{\"board\":\"qa\",\"title\":\"Question & Answer\",\"ws_board\":1,\"per_page\":15,\"pages\":10,\"max_filesize\":4194304,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":310,\"image_limit\":150,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":60},\"meta_description\":\"&quot;/qa/ - Question &amp; Answer&quot; is 4chan's imageboard for question and answer threads.\",\"is_archived\":1},\"qst\":{\"board\":\"qst\",\"title\":\"Quests\",\"ws_board\":1,\"per_page\":15,\"pages\":10,\"max_filesize\":8388608,\"max_webm_filesize\":3145728,\"max_comment_chars\":3000,\"max_webm_duration\":120,\"bump_limit\":750,\"image_limit\":375,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":60},\"meta_description\":\"&quot;/qst/ - Quests&quot; is 4chan's imageboard for grinding XP.\",\"spoilers\":1,\"user_ids\":1,\"is_archived\":1,\"require_subject\":1,\"oekaki\":1},\"r\":{\"board\":\"r\",\"title\":\"Adult Requests\",\"ws_board\":0,\"per_page\":15,\"pages\":10,\"max_filesize\":8388608,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":300,\"image_limit\":300,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":30},\"meta_description\":\"&quot;/r/ - Request&quot; is 4chan's imageboard dedicated to fulfilling all types of user requests.\",\"is_archived\":1,\"webm_audio\":1},\"r9k\":{\"board\":\"r9k\",\"title\":\"ROBOT9001\",\"ws_board\":0,\"per_page\":15,\"pages\":10,\"max_filesize\":2097152,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":500,\"image_limit\":150,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":30},\"meta_description\":\"&quot;/r9k/ - ROBOT9001&quot; is a board for hanging out and posting greentext stories.\",\"spoilers\":1,\"is_archived\":1},\"s\":{\"board\":\"s\",\"title\":\"Sexy Beautiful Women\",\"ws_board\":0,\"per_page\":15,\"pages\":10,\"max_filesize\":8388608,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":300,\"image_limit\":150,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":30},\"meta_description\":\"&quot;/s/ - Sexy Beautiful Women&quot; is 4chan's imageboard dedicated to sharing images of softcore pornography.\",\"is_archived\":1,\"min_image_width\":500,\"min_image_height\":500},\"s4s\":{\"board\":\"s4s\",\"title\":\"Shit 4chan Says\",\"ws_board\":0,\"per_page\":15,\"pages\":10,\"max_filesize\":2097152,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":300,\"image_limit\":300,\"cooldowns\":{\"threads\":300,\"replies\":60,\"images\":30},\"meta_description\":\"&quot;[s4s] - Shit 4chan Says&quot; is 4chan's imageboard for posting dank memes :^)\",\"spoilers\":1,\"custom_spoilers\":6,\"is_archived\":1},\"sci\":{\"board\":\"sci\",\"title\":\"Science & Math\",\"ws_board\":1,\"per_page\":15,\"pages\":10,\"max_filesize\":4194304,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":310,\"image_limit\":150,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":60},\"meta_description\":\"&quot;/sci/ - Science &amp; Math&quot; is 4chan's board for the discussion of science and math.\",\"is_archived\":1,\"math_tags\":1},\"soc\":{\"board\":\"soc\",\"title\":\"Cams & Meetups\",\"ws_board\":0,\"per_page\":15,\"pages\":10,\"max_filesize\":5242880,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":500,\"image_limit\":300,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":30},\"meta_description\":\"&quot;/soc/ - Cams &amp; Meetups&quot; is 4chan's board for camwhores and meetups.\",\"user_ids\":1,\"is_archived\":1,\"forced_anon\":1},\"sp\":{\"board\":\"sp\",\"title\":\"Sports\",\"ws_board\":1,\"per_page\":15,\"pages\":10,\"max_filesize\":4194304,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":500,\"image_limit\":300,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":60},\"meta_description\":\"&quot;/sp/ - Sports&quot; is 4chan's imageboard for sports discussion.\",\"is_archived\":1,\"country_flags\":1},\"t\":{\"board\":\"t\",\"title\":\"Torrents\",\"ws_board\":0,\"per_page\":15,\"pages\":10,\"max_filesize\":4194304,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":300,\"image_limit\":300,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":30},\"meta_description\":\"&quot;/t/ - Torrents&quot; is 4chan's imageboard for posting links and descriptions to torrents.\",\"is_archived\":1},\"tg\":{\"board\":\"tg\",\"title\":\"Traditional Games\",\"ws_board\":1,\"per_page\":15,\"pages\":10,\"max_filesize\":8388608,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":310,\"image_limit\":150,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":60},\"meta_description\":\"&quot;/tg/ - Traditional Games&quot; is 4chan's imageboard for discussing traditional gaming, such as board games and tabletop RPGs.\",\"spoilers\":1,\"custom_spoilers\":2,\"is_archived\":1},\"toy\":{\"board\":\"toy\",\"title\":\"Toys\",\"ws_board\":1,\"per_page\":15,\"pages\":10,\"max_filesize\":4194304,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":310,\"image_limit\":150,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":60},\"meta_description\":\"&quot;/toy/ - Toys&quot; is 4chan's imageboard for talking about all kinds of toys!\",\"is_archived\":1},\"trash\":{\"board\":\"trash\",\"title\":\"Off-Topic\",\"ws_board\":0,\"per_page\":15,\"pages\":10,\"max_filesize\":4194304,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":300,\"image_limit\":300,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":30},\"meta_description\":\"&quot;/trash/ - Off-topic&quot; is 4chan's imageboard jail for off-topic threads.\",\"forced_anon\":1},\"trv\":{\"board\":\"trv\",\"title\":\"Travel\",\"ws_board\":1,\"per_page\":15,\"pages\":10,\"max_filesize\":8388608,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":310,\"image_limit\":150,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":60},\"meta_description\":\"&quot;/trv/ - Travel&quot; is 4chan's imageboard dedicated to travel and the countries of the world.\",\"is_archived\":1},\"tv\":{\"board\":\"tv\",\"title\":\"Television & Film\",\"ws_board\":1,\"per_page\":15,\"pages\":10,\"max_filesize\":4194304,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":310,\"image_limit\":150,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":60},\"meta_description\":\"&quot;/tv/ - Television &amp; Film&quot; is 4chan's imageboard dedicated to the discussion of television and film.\",\"spoilers\":1,\"custom_spoilers\":5,\"is_archived\":1},\"u\":{\"board\":\"u\",\"title\":\"Yuri\",\"ws_board\":0,\"per_page\":15,\"pages\":10,\"max_filesize\":4194304,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":300,\"image_limit\":300,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":30},\"meta_description\":\"&quot;/u/ - Yuri&quot; is 4chan's imageboard for yuri hentai images.\",\"spoilers\":1,\"is_archived\":1},\"v\":{\"board\":\"v\",\"title\":\"Video Games\",\"ws_board\":1,\"per_page\":20,\"pages\":10,\"max_filesize\":4194304,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":500,\"image_limit\":300,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":60},\"meta_description\":\"&quot;/v/ - Video Games&quot; is 4chan's imageboard dedicated to the discussion of PC and console video games.\",\"spoilers\":1,\"custom_spoilers\":1,\"is_archived\":1},\"vg\":{\"board\":\"vg\",\"title\":\"Video Game Generals\",\"ws_board\":1,\"per_page\":15,\"pages\":10,\"max_filesize\":4194304,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":750,\"image_limit\":375,\"cooldowns\":{\"threads\":600,\"replies\":90,\"images\":120},\"meta_description\":\"&quot;/vg/ - Video Game Generals&quot; is 4chan's imageboard dedicated to the discussion of PC and console video games.\",\"spoilers\":1,\"custom_spoilers\":1,\"is_archived\":1,\"require_subject\":1},\"vip\":{\"board\":\"vip\",\"title\":\"Very Important Posts\",\"ws_board\":1,\"per_page\":15,\"pages\":10,\"max_filesize\":4194304,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":300,\"image_limit\":300,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":60},\"meta_description\":\"&quot;/vip/ - Very Important Posts&quot; is 4chan's imageboard for Pass users.\",\"spoilers\":1,\"is_archived\":1,\"sjis_tags\":1,\"oekaki\":1},\"vp\":{\"board\":\"vp\",\"title\":\"Pokémon\",\"ws_board\":1,\"per_page\":15,\"pages\":10,\"max_filesize\":4194304,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":310,\"image_limit\":150,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":60},\"meta_description\":\"&quot;/vp/ - Pok&eacute;mon&quot; is 4chan's imageboard dedicated to discussing the Pok&eacute;mon series of video games and shows.\",\"spoilers\":1,\"custom_spoilers\":1,\"is_archived\":1},\"vr\":{\"board\":\"vr\",\"title\":\"Retro Games\",\"ws_board\":1,\"per_page\":15,\"pages\":10,\"max_filesize\":4194304,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":500,\"image_limit\":300,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":60},\"meta_description\":\"&quot;/vr/ - Retro Games&quot; is 4chan's imageboard for discussing retro console video games and classic arcade games.\",\"spoilers\":1,\"custom_spoilers\":2,\"is_archived\":1},\"w\":{\"board\":\"w\",\"title\":\"Anime/Wallpapers\",\"ws_board\":1,\"per_page\":15,\"pages\":10,\"max_filesize\":6291456,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":310,\"image_limit\":300,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":60},\"meta_description\":\"&quot;/w/ - Anime/Wallpapers&quot; is 4chan's imageboard for posting Japanese anime wallpapers.\",\"is_archived\":1,\"min_image_width\":480,\"min_image_height\":600},\"wg\":{\"board\":\"wg\",\"title\":\"Wallpapers/General\",\"ws_board\":0,\"per_page\":15,\"pages\":10,\"max_filesize\":6291456,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":300,\"image_limit\":300,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":30},\"meta_description\":\"&quot;/wg/ - Wallpapers/General&quot; is 4chan's imageboard for posting general wallpapers.\",\"is_archived\":1,\"min_image_width\":480,\"min_image_height\":600},\"wsg\":{\"board\":\"wsg\",\"title\":\"Worksafe GIF\",\"ws_board\":1,\"per_page\":15,\"pages\":10,\"max_filesize\":6291456,\"max_webm_filesize\":6291456,\"max_comment_chars\":2000,\"max_webm_duration\":300,\"bump_limit\":310,\"image_limit\":150,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":60},\"meta_description\":\"&quot;/wsg/ - Worksafe GIF&quot; is 4chan's imageboard dedicated to sharing worksafe animated GIFs and WEBMs.\",\"is_archived\":1,\"webm_audio\":1},\"wsr\":{\"board\":\"wsr\",\"title\":\"Worksafe Requests\",\"ws_board\":1,\"per_page\":15,\"pages\":10,\"max_filesize\":8388608,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":310,\"image_limit\":150,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":60},\"meta_description\":\"&quot;/wsr/ - Worksafe Requests&quot; is 4chan's imageboard dedicated to fulfilling non-NSFW requests.\",\"is_archived\":1,\"webm_audio\":1},\"x\":{\"board\":\"x\",\"title\":\"Paranormal\",\"ws_board\":1,\"per_page\":15,\"pages\":10,\"max_filesize\":4194304,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":310,\"image_limit\":150,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":60},\"meta_description\":\"&quot;/x/ - Paranormal&quot; is 4chan's imageboard for the discussion of paranormal, spooky pictures and conspiracy theories.\",\"is_archived\":1},\"y\":{\"board\":\"y\",\"title\":\"Yaoi\",\"ws_board\":0,\"per_page\":15,\"pages\":10,\"max_filesize\":4194304,\"max_webm_filesize\":3145728,\"max_comment_chars\":2000,\"max_webm_duration\":120,\"bump_limit\":300,\"image_limit\":300,\"cooldowns\":{\"threads\":600,\"replies\":60,\"images\":30},\"meta_description\":\"&quot;/y/ - Yaoi&quot; is 4chan's imageboard for posting adult yaoi hentai images.\",\"is_archived\":1}},\"troll_flags\":{\"AC\":\"Anarcho-Capitalist\",\"AN\":\"Anarchist\",\"BL\":\"Black Nationalist\",\"CF\":\"Confederate\",\"CM\":\"Communist\",\"CT\":\"Catalonia\",\"DM\":\"Democrat\",\"EU\":\"European\",\"FC\":\"Fascist\",\"GN\":\"Gadsden\",\"GY\":\"Gay\",\"JH\":\"Jihadi\",\"KN\":\"Kekistani\",\"MF\":\"Muslim\",\"NB\":\"National Bolshevik\",\"NZ\":\"Nazi\",\"PC\":\"Hippie\",\"PR\":\"Pirate\",\"RE\":\"Republican\",\"TM\":\"Templar\",\"TR\":\"Tree Hugger\",\"UN\":\"United Nations\",\"WP\":\"White Supremacist\"},\"lastChecked\":1588628336300}","4chan X.archives":"s[{\"uid\":3,\"name\":\"4plebs\",\"domain\":\"archive.4plebs.org\",\"http\":true,\"https\":true,\"software\":\"foolfuuka\",\"boards\":[\"adv\",\"f\",\"hr\",\"o\",\"pol\",\"s4s\",\"sp\",\"tg\",\"trv\",\"tv\",\"x\"],\"files\":[\"adv\",\"f\",\"hr\",\"o\",\"pol\",\"s4s\",\"sp\",\"tg\",\"trv\",\"tv\",\"x\"],\"reports\":true},{\"uid\":4,\"name\":\"Nyafuu Archive\",\"domain\":\"archive.nyafuu.org\",\"http\":false,\"https\":true,\"software\":\"foolfuuka\",\"boards\":[\"bant\",\"c\",\"e\",\"n\",\"news\",\"out\",\"p\",\"toy\",\"vip\",\"vp\",\"w\",\"wg\",\"wsr\"],\"files\":[\"bant\",\"c\",\"e\",\"n\",\"news\",\"out\",\"p\",\"toy\",\"vip\",\"vp\",\"w\",\"wg\",\"wsr\"],\"reports\":true},{\"uid\":8,\"name\":\"Rebecca Black Tech\",\"domain\":\"archive.rebeccablacktech.com\",\"http\":false,\"https\":true,\"software\":\"foolfuuka\",\"boards\":[\"cgl\",\"g\",\"mu\"],\"files\":[\"cgl\",\"g\",\"mu\"],\"reports\":true},{\"uid\":10,\"name\":\"warosu\",\"domain\":\"warosu.org\",\"http\":false,\"https\":true,\"software\":\"fuuka\",\"boards\":[\"3\",\"biz\",\"cgl\",\"ck\",\"diy\",\"fa\",\"g\",\"ic\",\"jp\",\"lit\",\"sci\",\"tg\",\"vr\"],\"files\":[\"3\",\"biz\",\"cgl\",\"ck\",\"diy\",\"fa\",\"g\",\"ic\",\"jp\",\"lit\",\"sci\",\"tg\",\"vr\"],\"search\":[\"biz\",\"cgl\",\"ck\",\"diy\",\"fa\",\"g\",\"ic\",\"jp\",\"lit\",\"sci\",\"tg\",\"vr\"]},{\"uid\":23,\"name\":\"Desuarchive\",\"domain\":\"desuarchive.org\",\"http\":true,\"https\":true,\"software\":\"foolfuuka\",\"boards\":[\"a\",\"aco\",\"an\",\"c\",\"co\",\"d\",\"fit\",\"gif\",\"his\",\"int\",\"k\",\"m\",\"mlp\",\"qa\",\"r9k\",\"tg\",\"trash\",\"vr\",\"wsg\"],\"files\":[\"a\",\"aco\",\"an\",\"c\",\"co\",\"d\",\"fit\",\"gif\",\"his\",\"int\",\"k\",\"m\",\"mlp\",\"qa\",\"r9k\",\"tg\",\"trash\",\"vr\",\"wsg\"],\"reports\":true},{\"uid\":24,\"name\":\"fireden.net\",\"domain\":\"boards.fireden.net\",\"http\":false,\"https\":true,\"software\":\"foolfuuka\",\"boards\":[\"cm\",\"co\",\"ic\",\"sci\",\"tg\",\"vip\",\"y\"],\"files\":[\"cm\",\"co\",\"ic\",\"sci\",\"tg\",\"vip\",\"y\"],\"search\":[\"cm\",\"co\",\"ic\",\"sci\",\"tg\",\"y\"]},{\"uid\":25,\"name\":\"arch.b4k.co\",\"domain\":\"arch.b4k.co\",\"http\":true,\"https\":true,\"software\":\"foolfuuka\",\"boards\":[\"g\",\"jp\",\"mlp\",\"v\",\"vg\",\"vp\"],\"files\":[],\"search\":[\"v\",\"vg\"]},{\"uid\":28,\"name\":\"bstats\",\"domain\":\"archive.b-stats.org\",\"http\":false,\"https\":true,\"software\":\"foolfuuka\",\"boards\":[\"f\",\"cm\",\"hm\",\"lgbt\",\"news\",\"qst\",\"trash\",\"y\"],\"files\":[]},{\"uid\":29,\"name\":\"Archived.Moe\",\"domain\":\"archived.moe\",\"http\":true,\"https\":true,\"software\":\"foolfuuka\",\"boards\":[\"3\",\"a\",\"aco\",\"adv\",\"an\",\"asp\",\"b\",\"bant\",\"biz\",\"c\",\"can\",\"cgl\",\"ck\",\"cm\",\"co\",\"cock\",\"d\",\"diy\",\"e\",\"f\",\"fa\",\"fap\",\"fit\",\"fitlit\",\"g\",\"gd\",\"gif\",\"h\",\"hc\",\"his\",\"hm\",\"hr\",\"i\",\"ic\",\"int\",\"jp\",\"k\",\"lgbt\",\"lit\",\"m\",\"mlp\",\"mlpol\",\"mo\",\"mtv\",\"mu\",\"n\",\"news\",\"o\",\"out\",\"outsoc\",\"p\",\"po\",\"pol\",\"qa\",\"qst\",\"r\",\"r9k\",\"s\",\"s4s\",\"sci\",\"soc\",\"sp\",\"spa\",\"t\",\"tg\",\"toy\",\"trash\",\"trv\",\"tv\",\"u\",\"v\",\"vg\",\"vint\",\"vip\",\"vp\",\"vr\",\"w\",\"wg\",\"wsg\",\"wsr\",\"x\",\"y\"],\"files\":[\"can\",\"cock\",\"fap\",\"fitlit\",\"gd\",\"mlpol\",\"mo\",\"mtv\",\"outsoc\",\"po\",\"qst\",\"spa\",\"vint\",\"vip\"],\"search\":[\"aco\",\"adv\",\"an\",\"asp\",\"b\",\"bant\",\"c\",\"can\",\"cgl\",\"ck\",\"cm\",\"cock\",\"con\",\"d\",\"diy\",\"e\",\"f\",\"fap\",\"fitlit\",\"gd\",\"gif\",\"h\",\"hc\",\"his\",\"hm\",\"hr\",\"i\",\"ic\",\"lgbt\",\"lit\",\"mlpol\",\"mo\",\"mtv\",\"n\",\"news\",\"o\",\"out\",\"outsoc\",\"p\",\"po\",\"q\",\"qa\",\"qst\",\"r\",\"s\",\"soc\",\"spa\",\"trv\",\"u\",\"vint\",\"vip\",\"w\",\"wg\",\"wsg\",\"wsr\",\"x\",\"y\"],\"reports\":true},{\"uid\":30,\"name\":\"TheBArchive.com\",\"domain\":\"thebarchive.com\",\"http\":true,\"https\":true,\"software\":\"foolfuuka\",\"boards\":[\"b\",\"bant\"],\"files\":[\"b\",\"bant\"],\"reports\":true},{\"uid\":31,\"name\":\"Archive Of Sins\",\"domain\":\"archiveofsins.com\",\"http\":true,\"https\":true,\"software\":\"foolfuuka\",\"boards\":[\"h\",\"hc\",\"hm\",\"i\",\"lgbt\",\"r\",\"s\",\"soc\",\"t\",\"u\"],\"files\":[\"h\",\"hc\",\"hm\",\"i\",\"lgbt\",\"r\",\"s\",\"soc\",\"t\",\"u\"],\"reports\":true}]","4chan X.lastarchivecheck":"s1588598994961","4chan X.JSON Index":"strue","4chan X.Use 4chan X Catalog":"strue","4chan X.Index Refresh Notifications":"sfalse","4chan X.Open Threads in New Tab":"sfalse","4chan X.External Catalog":"sfalse","4chan X.Catalog Links":"sfalse","4chan X.Announcement Hiding":"strue","4chan X.Desktop Notifications":"sfalse","4chan X.404 Redirect":"strue","4chan X.Archive Report":"strue","4chan X.Exempt Archives from Encryption":"sfalse","4chan X.Keybinds":"strue","4chan X.Time Formatting":"strue","4chan X.Relative Post Dates":"strue","4chan X.Relative Date Title":"strue","4chan X.Comment Expansion":"strue","4chan X.File Info Formatting":"strue","4chan X.Thread Expansion":"strue","4chan X.Index Navigation":"sfalse","4chan X.Reply Navigation":"sfalse","4chan X.Custom Board Titles":"strue","4chan X.Persistent Custom Board Titles":"strue","4chan X.Show Updated Notifications":"strue","4chan X.Color User IDs":"strue","4chan X.Count Posts by ID":"strue","4chan X.Remove Spoilers":"sfalse","4chan X.Reveal Spoilers":"sfalse","4chan X.Normalize URL":"strue","4chan X.Disable Autoplaying Sounds":"sfalse","4chan X.Disable Native Extension":"strue","4chan X.Enable Native Flash Embedding":"strue","4chan X.Linkify":"strue","4chan X.Link Title":"strue","4chan X.Cover Preview":"strue","4chan X.Embedding":"strue","4chan X.Auto-embed":"sfalse","4chan X.Floating Embeds":"sfalse","4chan X.Anonymize":"sfalse","4chan X.Filter":"strue","4chan X.Filtered Backlinks":"sfalse","4chan X.Recursive Hiding":"strue","4chan X.Thread Hiding Buttons":"strue","4chan X.Reply Hiding Buttons":"strue","4chan X.Stubs":"strue","4chan X.Image Expansion":"strue","4chan X.Image Hover":"strue","4chan X.Image Hover in Catalog":"strue","4chan X.Gallery":"strue","4chan X.Fullscreen Gallery":"sfalse","4chan X.PDF in Gallery":"sfalse","4chan X.Sauce":"strue","4chan X.WEBM Metadata":"strue","4chan X.Reveal Spoiler Thumbnails":"sfalse","4chan X.Replace GIF":"sfalse","4chan X.Replace JPG":"sfalse","4chan X.Replace PNG":"sfalse","4chan X.Replace WEBM":"sfalse","4chan X.Image Prefetching":"sfalse","4chan X.Fappe Tyme":"sfalse","4chan X.Werk Tyme":"sfalse","4chan X.Autoplay":"strue","4chan X.Restart when Opened":"sfalse","4chan X.Show Controls":"strue","4chan X.Click Passthrough":"sfalse","4chan X.Allow Sound":"strue","4chan X.Mouse Wheel Volume":"strue","4chan X.Loop in New Tab":"strue","4chan X.Volume in New Tab":"strue","4chan X.Use Faster Image Host":"strue","4chan X.Menu":"strue","4chan X.Report Link":"sfalse","4chan X.Thread Hiding Link":"sfalse","4chan X.Reply Hiding Link":"sfalse","4chan X.Delete Link":"sfalse","4chan X.Archive Link":"strue","4chan X.Edit Link":"strue","4chan X.Download Link":"strue","4chan X.Thread Updater":"strue","4chan X.Unread Count":"strue","4chan X.Quoted Title":"sfalse","4chan X.Hide Unread Count at (0)":"sfalse","4chan X.Unread Favicon":"strue","4chan X.Unread Line":"strue","4chan X.Remember Last Read Post":"strue","4chan X.Scroll to Last Read Post":"strue","4chan X.Remove Thread Excerpt":"sfalse","4chan X.Thread Stats":"strue","4chan X.IP Count in Stats":"strue","4chan X.Page Count in Stats":"strue","4chan X.Updater and Stats in Header":"strue","4chan X.Thread Watcher":"strue","4chan X.Fixed Thread Watcher":"strue","4chan X.Persistent Thread Watcher":"sfalse","4chan X.Mark New IPs":"sfalse","4chan X.Reply Pruning":"strue","4chan X.Prune All Threads":"sfalse","4chan X.Quick Reply":"strue","4chan X.Persistent QR":"sfalse","4chan X.Auto Hide QR":"strue","4chan X.Open Post in New Tab":"strue","4chan X.Remember QR Size":"sfalse","4chan X.Remember Spoiler":"sfalse","4chan X.Randomize Filename":"sfalse","4chan X.Show New Thread Option in Threads":"sfalse","4chan X.Show Upload Progress":"strue","4chan X.Cooldown":"strue","4chan X.Posting Success Notifications":"strue","4chan X.Auto-load captcha":"sfalse","4chan X.Post on Captcha Completion":"sfalse","4chan X.Captcha Fixes":"strue","4chan X.Force Noscript Captcha":"sfalse","4chan X.Pass Link":"sfalse","4chan X.Quote Backlinks":"strue","4chan X.OP Backlinks":"strue","4chan X.Quote Inlining":"strue","4chan X.Inline Cross-thread Quotes Only":"strue","4chan X.Quote Hash Navigation":"sfalse","4chan X.Forward Hiding":"strue","4chan X.Quote Previewing":"strue","4chan X.Quote Highlighting":"strue","4chan X.Resurrect Quotes":"strue","4chan X.Remember Your Posts":"strue","4chan X.Mark Quotes of You":"strue","4chan X.Highlight Posts Quoting You":"strue","4chan X.Highlight Own Posts":"strue","4chan X.Mark OP Quotes":"strue","4chan X.Mark Cross-thread Quotes":"strue","4chan X.Quote Threading":"strue","4chan X.Fit width":"strue","4chan X.Fit height":"strue","4chan X.Scroll into view":"strue","4chan X.Expand spoilers":"strue","4chan X.Expand videos":"strue","4chan X.Expand from here":"sfalse","4chan X.Advance on contract":"sfalse","4chan X.Hide Thumbnails":"sfalse","4chan X.Fit Width":"strue","4chan X.Fit Height":"strue","4chan X.Stretch to Fit":"sfalse","4chan X.Scroll to Post":"strue","4chan X.Slide Delay":"s6","4chan X.Default Volume":"s0.11029633968883529","4chan X.Current Board":"sfalse","4chan X.Auto Update Thread Watcher":"strue","4chan X.Auto Watch":"sfalse","4chan X.Auto Watch Reply":"sfalse","4chan X.Auto Prune":"sfalse","4chan X.Show Unread Count":"strue","4chan X.Require OP Quote Link":"strue","4chan X.postID":"s\"# Highlight dubs on [s4s]:\\n#/(\\\\d)\\\\1$/;highlight;top:no;boards:s4s\"","4chan X.name":"s\"# Filter any namefags:\\n#/^(?!Anonymous$)/\"","4chan X.uniqueID":"s\"# Filter a specific ID:\\n#/Txhvk1Tl/\"","4chan X.tripcode":"s\"# Filter any tripfag\\n#/^!/\"","4chan X.capcode":"s\"# Set a custom class for mods:\\n#/Mod$/;highlight:mod;op:yes\\n# Set a custom class for admins:\\n#/Admin$/;highlight:admin;op:yes\"","4chan X.pass":"s\"# Filter anyone using since4pass:\\n#/./\"","4chan X.subject":"s\"# Filter Generals on /v/:\\n#/general/i;boards:v;op:only\"","4chan X.comment":"s\"# Filter Stallman copypasta on /g/:\\n#/what you're refer+ing to as linux/i;boards:g\\n# Filter posts with 20 or more quote links:\\n#/(?:>>\\\\d(?:(?!>>\\\\d)[^])*){20}/\\n# Filter posts like T H I S / H / I / S:\\n#/^>?\\\\s?\\\\w\\\\s?(\\\\w)\\\\s?(\\\\w)\\\\s?(\\\\w).*$[\\\\s>]+\\\\1[\\\\s>]+\\\\2[\\\\s>]+\\\\3/im\"","4chan X.flag":"s\"\"","4chan X.filename":"s\"\"","4chan X.dimensions":"s\"# Highlight potential wallpapers:\\n#/1920x1080/;op:yes;highlight;top:no;boards:w,wg\"","4chan X.filesize":"s\"\"","4chan X.MD5":"s\"/wRCs+0paX5jbYVWGn+Z16A==/\"","4chan X.sauces":"s\"# Reverse image search:\\nhttps://www.google.com/searchbyimage?image_url=%IMG&safe=off\\nhttps://yandex.com/images/search?rpt=imageview&url=%IMG\\n#//tineye.com/search?url=%IMG\\n#//www.bing.com/images/search?q=imgurl:%IMG&view=detailv2&iss=sbi#enterInsights\\n\\n# Specialized reverse image search:\\n//iqdb.org/?url=%IMG\\nhttps://trace.moe/?auto&url=%IMG;text:wait\\n#//3d.iqdb.org/?url=%IMG\\n#//saucenao.com/search.php?url=%IMG\\n\\n# \\\"View Same\\\" in archives:\\nhttp://eye.swfchan.com/search/?q=%name;types:swf\\n#https://desuarchive.org/_/search/image/%sMD5/\\n#https://archive.4plebs.org/_/search/image/%sMD5/\\n#https://boards.fireden.net/_/search/image/%sMD5/\\n#https://foolz.fireden.net/_/search/image/%sMD5/\\n\\n# Other tools:\\n#http://exif.regex.info/exif.cgi?imgurl=%URL\\n#//imgops.com/start?url=%URL;types:gif,jpg,png\\n#//www.gif-explode.com/%URL;types:gif\\n\\n# Known filename formats:\\nhttps://www.pixiv.net/member_illust.php?mode=medium&illust_id=%$1;regexp:/^(\\\\d+)_p\\\\d+/\\njavascript:void(open(\\\"https://www.deviantart.com/\\\"+%$1.replace(/_/g,\\\"-\\\")+\\\"/art/\\\"+parseInt(%$2,36)));regexp:/^\\\\w+_by_(\\\\w+)[_-]d([\\\\da-z]{6})\\\\b/\\nhttps://imgur.com/%$1;regexp:/^(?![a-zA-Z][a-z]{6})(?![A-Z]{7})(?!\\\\d{7})([\\\\da-zA-Z]{7})(?: \\\\(\\\\d+\\\\))?\\\\.\\\\w+$/\\nhttps://flickr.com/photo.gne?id=%$1;regexp:/^(\\\\d+)_[\\\\da-f]{10}(?:_\\\\w)*\\\\b/\\nhttps://www.facebook.com/photo.php?fbid=%$1;regexp:/^\\\\d+_(\\\\d+)_\\\\d+_[no]\\\\b/\"","4chan X.werk":"sfalse","4chan X.Custom CSS":"sfalse","4chan X.Index Mode":"s\"catalog\"","4chan X.Previous Index Mode":"s\"infinite\"","4chan X.Index Size":"s\"large\"","4chan X.Show Replies":"strue","4chan X.Catalog Hover Expand":"strue","4chan X.Catalog Hover Toggle":"strue","4chan X.Pin Watched Threads":"sfalse","4chan X.Anchor Hidden Threads":"strue","4chan X.Refreshed Navigation":"sfalse","4chan X.Fixed Header":"strue","4chan X.Header auto-hide":"sfalse","4chan X.Header auto-hide on scroll":"sfalse","4chan X.Bottom Header":"sfalse","4chan X.Centered links":"sfalse","4chan X.Header catalog links":"sfalse","4chan X.Bottom Board List":"strue","4chan X.Shortcut Icons":"strue","4chan X.Custom Board Navigation":"strue","4chan X.archiveLists":"s\"https://nstepien.github.io/archives.json/archives.json\"","4chan X.archiveAutoUpdate":"strue","4chan X.boardnav":"s\"toggle-all b-text:\\\"random\\\" vp-text:\\\"pokémon\\\" gif-text:\\\"nsfw\\\" s-text:\\\"girls\\\" g-text:\\\"technology\\\" wg-text:\\\"rice\\\"   jp-text:\\\"nippon\\\" w-text:\\\"walls\\\" mu-text:\\\"music\\\" external-text:\\\"Unix\\\",\\\"https://www.reddit.com/r/unixporn/\\\" external-text:\\\"Kpopfap\\\",\\\"https://www.reddit.com/r/kpopfap/\\\"\"","4chan X.QR.personas":"s\"#options:\\\"sage\\\";boards:jp;always\"","4chan X.sjisPreview":"sfalse","4chan X.jsWhitelist":"s\"http://s.4cdn.org\\nhttps://s.4cdn.org\\nhttp://www.google.com\\nhttps://www.google.com\\nhttps://www.gstatic.com\\nhttp://cdn.mathjax.org\\nhttps://cdn.mathjax.org\\n'self'\\n'unsafe-inline'\\n'unsafe-eval'\\n\\n# Banner ads\\n#http://s.zkcdn.net/ados.js\\n#https://s.zkcdn.net/ados.js\\n#http://engine.4chan-ads.org\\n#https://engine.4chan-ads.org\\n\\nhttps://cdnjs.cloudflare.com\\n\\nhttps://hcaptcha.com\\nhttps://*.hcaptcha.com\"","4chan X.captchaLanguage":"s\"\"","4chan X.time":"s\"%d %B %Y %H:%M\"","4chan X.backlink":"s\">>%id\"","4chan X.fileInfo":"s\"%T, %s, %r, %d\"","4chan X.favicon":"s\"ferongr\"","4chan X.usercss":"s\"/* Board title rice */\\ndiv.boardTitle {\\n  font-weight: 400 !important;\\n}\\n:root.yotsuba div.boardTitle {\\n  font-family: Roboto !important;\\n  text-shadow: 1px 1px 1px rgba(100,0,0,0.6);\\n}\\n:root.yotsuba-b div.boardTitle {\\n  font-family: Roboto !important;\\n  text-shadow: 1px 1px 1px rgba(105,10,15,0.6);\\n}\\n:root.photon div.boardTitle {\\n  font-family: Roboto !important;\\n  text-shadow: 1px 1px 1px rgba(0,74,153,0.6);\\n}\\n:root.tomorrow div.boardTitle {\\n  font-family: Roboto !important;\\n  text-shadow: 1px 1px 1px rgba(167,170,168,0.6);\\n}\"","4chan X.Toggle board list":"s\"Ctrl+b\"","4chan X.Toggle header":"s\"Shift+h\"","4chan X.Open empty QR":"s\"q\"","4chan X.Open QR":"s\"Shift+q\"","4chan X.Open settings":"s\"Alt+o\"","4chan X.Close":"s\"Esc\"","4chan X.Spoiler tags":"s\"Ctrl+s\"","4chan X.Code tags":"s\"Alt+c\"","4chan X.Eqn tags":"s\"Alt+e\"","4chan X.Math tags":"s\"Alt+m\"","4chan X.SJIS tags":"s\"Alt+a\"","4chan X.Toggle sage":"s\"Alt+s\"","4chan X.Toggle Cooldown":"s\"Alt+Comma\"","4chan X.Post from URL":"s\"Alt+l\"","4chan X.Add new post":"s\"Alt+n\"","4chan X.Submit QR":"s\"Ctrl+Enter\"","4chan X.Watch":"s\"w\"","4chan X.Update":"s\"r\"","4chan X.Update thread watcher":"s\"Shift+r\"","4chan X.Toggle thread watcher":"s\"t\"","4chan X.Expand image":"s\"Shift+e\"","4chan X.Expand images":"s\"e\"","4chan X.Open Gallery":"s\"g\"","4chan X.Pause":"s\"p\"","4chan X.Slideshow":"s\"Ctrl+Right\"","4chan X.fappeTyme":"s\"f\"","4chan X.werkTyme":"s\"Shift+w\"","4chan X.Front page":"s1","4chan X.Open front page":"s\"Shift+1\"","4chan X.Next page":"s\"Ctrl+Right\"","4chan X.Previous page":"s\"Ctrl+Left\"","4chan X.Paged mode":"s\"Alt+1\"","4chan X.Infinite scrolling mode":"s\"Alt+2\"","4chan X.All pages mode":"s\"Alt+3\"","4chan X.Open catalog":"s\"Shift+c\"","4chan X.Search form":"s\"Ctrl+Alt+s\"","4chan X.Cycle sort type":"s\"Alt+x\"","4chan X.Next thread":"s\"Ctrl+Down\"","4chan X.Previous thread":"s\"Ctrl+Up\"","4chan X.Expand thread":"s\"Ctrl+e\"","4chan X.Open thread":"s\"o\"","4chan X.Open thread tab":"s\"Shift+o\"","4chan X.Next reply":"s\"j\"","4chan X.Previous reply":"s\"k\"","4chan X.Deselect reply":"s\"Shift+d\"","4chan X.Hide":"s\"x\"","4chan X.Quick Filter MD5":"s5","4chan X.Previous Post Quoting You":"s\"Alt+Up\"","4chan X.Next Post Quoting You":"s\"Alt+Down\"","4chan X.Beep":"sfalse","4chan X.Beep Quoting You":"sfalse","4chan X.Auto Scroll":"sfalse","4chan X.Bottom Scroll":"sfalse","4chan X.Scroll BG":"sfalse","4chan X.Auto Update":"strue","4chan X.Optional Increase":"sfalse","4chan X.Interval":"s20","4chan X.customCooldown":"s0","4chan X.customCooldownEnabled":"strue","4chan X.Thread Quotes":"strue","4chan X.Max Replies":"s1000","4chan X.Autohiding Scrollbar":"sfalse","4chan X.embedding.position":"s\"top: 50px; right: 0px;\"","4chan X.thread-stats.position":"s\"bottom: 0px; right: 0px;\"","4chan X.updater.position":"s\"bottom: 0px; left: 0px;\"","4chan X.thread-watcher.position":"s\"top: 15.8685%; left: 76.1744%;\"","4chan X.qr.position":"s\"right: 0px; bottom: 26.4167px;\"","4chan X.hiddenThreads":"s{\"4chan.org\":{\"boards\":{},\"lastChecked\":1482415002259}}","4chan X.hiddenPosts":"s{\"4chan.org\":{\"boards\":{},\"lastChecked\":1550866115135},\"version\":4}","4chan X.lastReadPosts":"s{\"version\":27243,\"4chan.org\":{\"boards\":{\"s\":{\"9112225\":9240138},\"mu\":{\"48186754\":48186754},\"b\":{\"826844099\":826844539,\"826845150\":826845992,\"826851138\":826853420,\"826851516\":826852811,\"826851526\":826851716,\"826851635\":826851935}},\"lastChecked\":1588628334774}}","4chan X.yourPosts":"s{\"version\":34,\"4chan.org\":{\"boards\":{},\"lastChecked\":1574337277455}}","4chan X.customTitles":"s{\"4chan.org\":{\"boards\":{\"w\":{\"boardTitle\":{\"title\":\"「 壁紙 & 日本  WALLS 」 \\n      \\n\\n       \",\"orig\":\"/w/ - Anime/Wallpapers\"}},\"a\":{\"boardTitle\":{\"title\":\"「 アニメ FUNANIMation 」\",\"orig\":\"/a/ - Anime & Manga\"}},\"wg\":{\"boardTitle\":{\"title\":\"「壁紙 &普通 RICE walls」\",\"orig\":\"/wg/ - Wallpapers/General\"}},\"v\":{\"boardTitle\":{\"title\":\"「 ビデオゲーム vidyagaems 」\",\"orig\":\"/v/ - Video Games\"}},\"vg\":{\"boardTitle\":{\"title\":\"「ゲーム 普通  general 」 \",\"orig\":\"/vg/ - Video Game Generals\"}},\"e\":{\"boardTitle\":{\"title\":\"「エッチ」\",\"orig\":\"/e/ - Ecchi\"}},\"h\":{\"boardTitle\":{\"title\":\"「 変態 comicket」\",\"orig\":\"/h/ - Hentai\"}},\"vp\":{\"boardTitle\":{\"title\":\"「ポケモン」\",\"orig\":\"/vp/ - Pokémon\"}},\"c\":{\"boardTitle\":{\"title\":\"「 可愛い cute stuff」\",\"orig\":\"/c/ - Anime/Cute\"}},\"jp\":{\"boardTitle\":{\"title\":\"「おた 文明 」\",\"orig\":\"/jp/ - Otaku Culture\"}},\"gif\":{\"boardTitle\":{\"title\":\"「 成人 NSFW」\",\"orig\":\"/gif/ - Adult GIF\"}},\"ck\":{\"boardTitle\":{\"title\":\"「 料理 Cooking 」\",\"orig\":\"/ck/ - Food & Cooking\"}},\"s\":{\"boardTitle\":{\"title\":\"「  美しい女性 」\",\"orig\":\"/s/ - Sexy Beautiful Women\"}},\"b\":{\"boardTitle\":{\"title\":\"「 ランダム  Random 」\",\"orig\":\"/b/ - Random\"}},\"g\":{\"boardTitle\":{\"title\":\"  「 技術 Technology 」\",\"orig\":\"/g/ - Technology\"}},\"mu\":{\"boardTitle\":{\"title\":\"「 音楽 Music 」\",\"orig\":\"/mu/ - Music\"}}}}}","4chan X.selectedArchives":"s{}","4chan X.cooldowns":"s{\"global\":{},\"w\":{\"1489784517043\":{\"threadID\":1999257,\"postID\":2002299}},\"mu\":{\"1568471507044\":{\"threadID\":90119589,\"postID\":90119786}},\"b\":{\"1574308349293\":{\"threadID\":814514273,\"postID\":814517408}}}","4chan X.Index Sort":"s{\"w\":\"lastreply\",\"wg\":\"lastreply\",\"a\":\"lastreply\",\"v\":\"lastreply\",\"g\":\"lastreply\",\"vg\":\"lastreply\",\"c\":\"lastreply\"}","4chan X.Except Archives from Encryption":"sfalse","4chan X.JSON Navigation":"strue","4chan X.Oekaki Links":"strue","4chan X.Show Name and Subject":"sfalse","4chan X.QR Shortcut":"strue","4chan X.Bottom QR Link":"strue","4chan X.Toggleable Thread Watcher":"strue","4chan X.Use Recaptcha v1":"sfalse","4chan X.Use Recaptcha v1 on Index":"sfalse","4chan X.Use Recaptcha v1 in Reports":"sfalse","4chan X.hiddenPSA":"s1545216719","4chan X.QR.persona":"s{\"name\":null}","4chan X.fourchanImageHost":"s\"i.4cdn.org\"","4chan X.Filter in Native Catalog":"sfalse","4chan X.cachedTitles":"s[{\"key\":\"YouTube\",\"uid\":\"A4QfTjLDtrI\",\"text\":\"Difference Engine - 5 Listens\"},{\"key\":\"YouTube\",\"uid\":\"i4cbxZdLr-s\",\"text\":\"James Acaster Presents: 16 Overlooked PERFECT Albums of 2016\"},{\"key\":\"YouTube\",\"uid\":\"0OFnp_AyU-I\",\"text\":\"Punish With Impunity-War Story (Choking Victim acoustic cover)\"},{\"key\":\"YouTube\",\"uid\":\"lI0X9Zlmpbw\",\"text\":\"Portrayal Of Guilt - Scarcity\"},{\"key\":\"YouTube\",\"uid\":\"pdFlE58Xmzs\",\"text\":\"Portrayal Of Guilt - Moral Decay\"},{\"key\":\"YouTube\",\"uid\":\"-8kNJmcx7Ug\",\"text\":\"Jerry's Kids - Is This my World?\"},{\"key\":\"YouTube\",\"uid\":\"w44Hvb6dLbw\",\"text\":\"The Flaming Lips - Everyone Wants To Live Forever [Official Music Video]\"},{\"key\":\"YouTube\",\"uid\":\"bXLvzP_Td8k\",\"text\":\"THE CURE -  Push \\\"Live In Orange\\\"\"},{\"key\":\"YouTube\",\"uid\":\"salbSLGlePM\",\"text\":\"Husker Du - Eight Miles High (London 1985)\"},{\"key\":\"YouTube\",\"uid\":\"nt8xhUhMzL0\",\"text\":\"Jane's Addiction - Whores (Live in Milan) 10-11-90 [HQ]\"},{\"key\":\"YouTube\",\"uid\":\"G-RTfVFuyW0\",\"text\":\"Siouxsie and the Banshees - The Killing Jar - Live 1988\"},{\"key\":\"YouTube\",\"uid\":\"UJfP6G0LSEA\",\"text\":\"\\\"Streets Of Your Town\\\" / THE GO-BETWEENS Original Version (1988)\"},{\"key\":\"YouTube\",\"uid\":\"L8QE4k0T980\",\"text\":\"Cranes - Jewel (Video)\"},{\"key\":\"YouTube\",\"uid\":\"C26BI1kJdkk\",\"text\":\"DEBONAIR the afghan whigs\"},{\"key\":\"YouTube\",\"uid\":\"7lqDIjLdg0I\",\"text\":\"Primal Scream - Gentle Tuesday (Official Video)\"},{\"key\":\"YouTube\",\"uid\":\"3bDkNl9eKyk\",\"text\":\"Curve - Coast Is Clear (Video)\"},{\"key\":\"YouTube\",\"uid\":\"aDaOgu2CQtI\",\"text\":\"Pearl Jam - Do the Evolution (Official Video)\"},{\"key\":\"YouTube\",\"uid\":\"h6Z5N0Z6zH0\",\"text\":\"Green Day - American Idiot - [HQ]\"},{\"key\":\"YouTube\",\"uid\":\"9cVJr3eQfXc\",\"text\":\"Green Day - Troubled Times (Official Lyric Video)\"},{\"key\":\"YouTube\",\"uid\":\"hES9IBTPbcw\",\"text\":\"Bad Religion - \\\"The Kids Are Alt-Right\\\"\"},{\"key\":\"YouTube\",\"uid\":\"3_MRe3JwFc8\",\"text\":\"Aphex Twin • ‘aisatsana [102]’\"},{\"key\":\"YouTube\",\"uid\":\"16B9ZaT1LSc\",\"text\":\"Pere ubu - George Had A Hat\"},{\"key\":\"YouTube\",\"uid\":\"mHzfhU8t5i8\",\"text\":\"Living In A Box - Living In A Box (Official Video)\"},{\"key\":\"YouTube\",\"uid\":\"IP4lpM1rHgA\",\"text\":\"Amnesia Scanner - AS [full EP]\"},{\"key\":\"SoundCloud\",\"uid\":\"ryanderanged/witch-hunt\",\"text\":\"Witch Hunt by Ryan Deranged\"},{\"key\":\"YouTube\",\"uid\":\"O_ZUmMzP5ts\",\"text\":\"Girls' Generation - Into The New World Ballad Version\"},{\"key\":\"YouTube\",\"uid\":\"1D5C9U0NqzQ\",\"text\":\"소녀주의보(GSA) - We got the power M/V\"},{\"key\":\"YouTube\",\"uid\":\"cxNIewNXpcg\",\"text\":\"BLACKPINK - 'SOLO' + '뚜두뚜두(DDU-DU DDU-DU)' + 'FOREVER YOUNG' in 2018 SBS Gayodaejun\"},{\"key\":\"YouTube\",\"uid\":\"jyA76LsCoCo\",\"text\":\"Girls' Generation - Flyers lyrics\"},{\"key\":\"YouTube\",\"uid\":\"O9YFncRmZdM\",\"text\":\"Girls' Generation 소녀시대 Comeback Stage 'The Boys' KBS MUSIC BANK 2011.10.21\"},{\"key\":\"YouTube\",\"uid\":\"xV3yeZ9kC3g\",\"text\":\"Dreamcatcher Struggles in PortugueseㅣTelephone Game w/ Dreamcatcher\"},{\"key\":\"YouTube\",\"uid\":\"7VVERnrVTW8\",\"text\":\"Anna Kendrick goes K-Pop with F(x)\"},{\"key\":\"YouTube\",\"uid\":\"xVYXTEG0Qeg\",\"text\":\"[FULL ALBUM] GIRLS' GENERATION - LOVE&PEACE | 3rd JAPAN ALBUM\"},{\"key\":\"YouTube\",\"uid\":\"Sj8as9is7Qg\",\"text\":\"Best kpop fanchant ever SNSD (Girls generation ) I got a boy fanchant\"},{\"key\":\"YouTube\",\"uid\":\"gqFlghuZC84\",\"text\":\"Girls'Generation - Paparazzi    Phantasia in Saitama [DVD]\"},{\"key\":\"YouTube\",\"uid\":\"ipouIsX1phI\",\"text\":\"[MV] Lizzy(리지) _ Not an easy girl (쉬운 여자 아니에요) (Feat. Jung Hyung Don(정형돈))\"},{\"key\":\"YouTube\",\"uid\":\"cjRrfRHNr0A\",\"text\":\"Sana Dancing Mr. Taxi of SNSD.\"},{\"key\":\"YouTube\",\"uid\":\"kfjpUTt9PJQ\",\"text\":\"[핑크판타지] FANTASY Official M/V (Pink Fantasy - Fantasy M/V)\"},{\"key\":\"YouTube\",\"uid\":\"YHujjqv6Y5E\",\"text\":\"Maya Hawke - To Love a Boy\"},{\"key\":\"YouTube\",\"uid\":\"Od3ouz-IHw0\",\"text\":\"GET TO KNOW BETTER: 머스키 (MUSKY) | dotasiaent\"},{\"key\":\"YouTube\",\"uid\":\"GbjwfQG_N_Y\",\"text\":\"xanny\"},{\"key\":\"YouTube\",\"uid\":\"OTm67027slI\",\"text\":\"Lana Del Rey - Without You (Live at Amoeba)\"},{\"key\":\"YouTube\",\"uid\":\"oryaRiRP8uM\",\"text\":\"Suffering Hour - For the Putridity of Man\"},{\"key\":\"YouTube\",\"uid\":\"1xDIyiXgeqg\",\"text\":\"Low Empire\"},{\"key\":\"YouTube\",\"uid\":\"KGXm6m5OnAc\",\"text\":\"Deafheaven - \\\"Black Brick\\\"\"},{\"key\":\"YouTube\",\"uid\":\"ZJkNsWCay4c\",\"text\":\"Mike Oldfield - Tubular bells 1 (part one) 1973\"},{\"key\":\"YouTube\",\"uid\":\"UNftrsCMiQs\",\"text\":\"Skip James- Hard Time Killin' Floor Blues\"},{\"key\":\"YouTube\",\"uid\":\"F7y2fbY23Dg\",\"text\":\"Squid - Houseplants (Official Audio)\"},{\"key\":\"YouTube\",\"uid\":\"u5X0qrPs6T0\",\"text\":\"Hobo Johnson - Subaru Crosstrek XV (Official Audio)\"},{\"key\":\"YouTube\",\"uid\":\"x586o64FvQA\",\"text\":\"Antigama - Zeroland\"},{\"key\":\"YouTube\",\"uid\":\"GbUQG-qgdtg\",\"text\":\"Headie One - Both\"},{\"key\":\"YouTube\",\"uid\":\"2S24-y0Ij3Y\",\"text\":\"BLACKPINK - 'Kill This Love' M/V\"},{\"key\":\"YouTube\",\"uid\":\"IHNzOHi8sJs\",\"text\":\"BLACKPINK - ‘뚜두뚜두 (DDU-DU DDU-DU)’ M/V\"},{\"key\":\"YouTube\",\"uid\":\"HCV0idG1qkQ\",\"text\":\"190818 FROMIS_9 Performance Stage @ Con LA 2019\"},{\"key\":\"YouTube\",\"uid\":\"HR3DcUMLeN0\",\"text\":\"The Making Of Red Velvet 레드벨벳 \\\"Bad Boy\\\" With The Stereotypes | Deconstructed\"},{\"key\":\"YouTube\",\"uid\":\"8jg2cw6AbyE\",\"text\":\"[FULL EP ALBUM] RED VELVET - SAPPY\"},{\"key\":\"YouTube\",\"uid\":\"O4XEJhLh124\",\"text\":\"190525 Born This Way (LadyGaga) TWICE 나연 직캠\"},{\"key\":\"YouTube\",\"uid\":\"4gX_p1VkgA4\",\"text\":\"EVERGLOW (에버글로우) - Adios MV\"},{\"key\":\"YouTube\",\"uid\":\"tZw7qtdrl34\",\"text\":\"\\\"icy\\\" - itzy but you and your rat friends are chillin and dancing inside my freezer smh [rat kdrama]\"},{\"key\":\"Streamable\",\"uid\":\"rnnm6\",\"text\":\"twice sining tranny anthem\"},{\"key\":\"YouTube\",\"uid\":\"OWAQB29aZJY\",\"text\":\"Hush\"},{\"key\":\"Streamable\",\"uid\":\"3zqcz\",\"text\":\"\"},{\"key\":\"YouTube\",\"uid\":\"rKZmEQ9P4Nw\",\"text\":\"High School Musical 2 - You Are The Music In Me (Lyrics) 720HD\"},{\"key\":\"YouTube\",\"uid\":\"MZoqm21vmbk\",\"text\":\"TwaiiSubs HPHP MV Making [ENG]\"},{\"key\":\"YouTube\",\"uid\":\"rcWPqxCweuU\",\"text\":\"Oompa Loompa Doompa Dee Do Song\"},{\"key\":\"YouTube\",\"uid\":\"Bznxx12Ptl0\",\"text\":\"AronChupa - I'm an Albatraoz | OFFICIAL VIDEO\"},{\"key\":\"YouTube\",\"uid\":\"vHS9E6JFja8\",\"text\":\"Red Velvet 레드벨벳 '음파음파 (Umpah Umpah)' MV\"},{\"key\":\"YouTube\",\"uid\":\"bTTczRe-Pj0\",\"text\":\"[MV] THE BOYZ(더보이즈) _ D.D.D\"},{\"key\":\"YouTube\",\"uid\":\"gGuBG_xStgA\",\"text\":\"Andrew W.K. - Party Mindset (Audio)\"},{\"key\":\"YouTube\",\"uid\":\"i3Ag5pwNSiM\",\"text\":\"Synthesizers, As Digested by a Classical Musician\"},{\"key\":\"YouTube\",\"uid\":\"QJ05m3xGa_Y\",\"text\":\"Scooter - Nessaja (original female vocal compared to pitched one)\"},{\"key\":\"YouTube\",\"uid\":\"y5gYP1efm60\",\"text\":\"The Chipmunks singing \\\"Rock n' Roll\\\" with their Voice Actors!\"},{\"key\":\"YouTube\",\"uid\":\"tcDxZLdF1W8\",\"text\":\"Getting lucky with you real voices\"},{\"key\":\"YouTube\",\"uid\":\"m2sh8LQ0WCk\",\"text\":\"Beep Beep [Adult version reuploaded]\"},{\"key\":\"YouTube\",\"uid\":\"dZvU2UfJFlA\",\"text\":\"Nana - Lonely [ lyrics ]\"},{\"key\":\"YouTube\",\"uid\":\"8vwAHU89Zno\",\"text\":\"【PV】AKKUMA★TIME 6:66\"},{\"key\":\"YouTube\",\"uid\":\"vBAnse49Su4\",\"text\":\"International Dream Pop//Shoegaze Compilation\"},{\"key\":\"YouTube\",\"uid\":\"vXivZlPu0ms\",\"text\":\"Are There Different Levels of Perfect Pitch?\"},{\"key\":\"YouTube\",\"uid\":\"u7Sg30g3mNU\",\"text\":\"Kanye West-YANDHI(Fullalbum)2019 [LEAKED!]\"},{\"key\":\"YouTube\",\"uid\":\"IDJgwUeW7_k\",\"text\":\"Cake - War Pigs\"},{\"key\":\"SoundCloud\",\"uid\":\"trablastara\",\"text\":\"Trablastara\"},{\"key\":\"YouTube\",\"uid\":\"odYTkY7qCbU\",\"text\":\"프듀 윤진이와 버스터즈 형서가 영어로 한림예고 구석구석을 소개합니다_한림예고 스쿨투어 Hanlim School Tour in English\"},{\"key\":\"YouTube\",\"uid\":\"XXOS0lWMEGw\",\"text\":\"[MV] 버스터즈(Busters) - Pinky Promise\"},{\"key\":\"YouTube\",\"uid\":\"L4qJ1BYMwQ0\",\"text\":\"[4K] 190818 다이아(DIA)_(예빈) 우와 [평택 락 페스티벌] 직캠(fancam)\"},{\"key\":\"YouTube\",\"uid\":\"82gN39Mr3F8\",\"text\":\"[안방1열 직캠4K] 있지 류진 'ICY' (ITZY RYUJIN Fancam)ㅣ@SBS Inkigayo_2019.8.18\"},{\"key\":\"YouTube\",\"uid\":\"IYG-v22GSak\",\"text\":\"[4k] 190818 다이아(유니스) - WooWoo @ 2019 평택 락페 MBC net 특집방송 직캠 by Romanticwinter\"},{\"key\":\"YouTube\",\"uid\":\"j3IMl-kXZe4\",\"text\":\"[FANCAM] 190817 ITZY arriving @ LAX for KCon Los Angeles\"},{\"key\":\"YouTube\",\"uid\":\"xFRmvS3EaVc\",\"text\":\"SIGNS OF THE SWARM - CESSPOOL OF IGNORANCE [OFFICIAL MUSIC VIDEO] (2017) SW EXCLUSIVE\"},{\"key\":\"YouTube\",\"uid\":\"lQjGZIoy2KE\",\"text\":\"Country Roads [Whisper of the Heart] (John Denver) With lyrics\"},{\"key\":\"YouTube\",\"uid\":\"BOay-7aqLks\",\"text\":\"Pink Floyd - One Of My Turns\"},{\"key\":\"YouTube\",\"uid\":\"-byQwJ2Uoh0\",\"text\":\"Kahn - Helter Skelter (HD)\"},{\"key\":\"YouTube\",\"uid\":\"FpzW7RH0cgY\",\"text\":\"Erwin Nyiregyhàzi Plays Mephisto Waltzer\"},{\"key\":\"YouTube\",\"uid\":\"jsdHzKqtbXE\",\"text\":\"Mazeppa, Liszt, Nyiregyhazi, Ampico\"},{\"key\":\"YouTube\",\"uid\":\"qmHOIDUApfA\",\"text\":\"TWILIGHT FORCE - Dawn Of The Dragonstar (OFFICIAL VIDEO)\"},{\"key\":\"YouTube\",\"uid\":\"SGWYbkXCcGU\",\"text\":\"Mass in C minor KV. 427: Kyrie (1785)\"},{\"key\":\"YouTube\",\"uid\":\"TVDjaTKdbGU\",\"text\":\"Tommy Wright III -  Shoot to Kill\"},{\"key\":\"YouTube\",\"uid\":\"yOp_79UXPj4\",\"text\":\"Three 6 Mafia-Body Parts\"},{\"key\":\"YouTube\",\"uid\":\"Qx_q1bcDvuk\",\"text\":\"The Minus 5 - \\\"Beatles Forever (Little Red)\\\" (Official Video)\"},{\"key\":\"YouTube\",\"uid\":\"s8YQ-H_mGTc\",\"text\":\"Zmelkoow - Ko po - videospot\"},{\"key\":\"YouTube\",\"uid\":\"6PuT6UrAo_Y\",\"text\":\"Zmelkoow - Čau slonček\"}]"},"ts":1588630519745},"enabled":true,"position":1,"file_url":"https://www.4chan-x.net/builds/4chan-X.user.js","uuid":"eadded86-7720-4526-bdac-b6b64ef73680","source":""},{"name":"OneeChan","options":{"check_for_updates":true,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_arrayleft":false,"compat_uW_gmonkey":false,"compat_forvarin":false,"noframes":null,"awareOfChrome":false,"run_at":null,"override":{"use_includes":[],"orig_includes":[],"merge_includes":true,"use_matches":[],"orig_matches":["*://boards.4chan.org/*","*://boards.4channel.org/*"],"merge_matches":true,"use_excludes":[],"orig_excludes":[],"merge_excludes":true,"use_connects":[],"merge_connects":true,"use_blockers":[],"orig_run_at":"document-start","orig_noframes":null}},"storage":{"data":{"OneeChan.VERSION":"s\"5.6.1\"","OneeChan.Total Mascots":"n57","OneeChan.Total Themes":"n27","OneeChan.Left Margin":"n65","OneeChan.Custom Left Margin":"n0","OneeChan.Right Margin":"n5","OneeChan.Custom Right Margin":"n0","OneeChan.Style Thread Stats":"sfalse","OneeChan.Rounded Corners":"strue","OneeChan.Underline All Links":"sfalse","OneeChan.Show Banner":"sfalse","OneeChan.Reduce Banner Opacity":"sfalse","OneeChan.Show Board Banners":"sfalse","OneeChan.Show Board Name":"strue","OneeChan.Show Reply to Thread Button":"sfalse","OneeChan.Show Checkboxes":"sfalse","OneeChan.Show Blotter":"sfalse","OneeChan.Show 4chan Ads":"sfalse","OneeChan.Show Top Ad":"strue","OneeChan.Show Middle Ad":"strue","OneeChan.Show Bottom Ad":"strue","OneeChan.Reduce Ad Opacity":"sfalse","OneeChan.Show Navigation Links":"strue","OneeChan.Show Top Links":"strue","OneeChan.Show Bottom Links":"strue","OneeChan.Show Previous/Next buttons":"sfalse","OneeChan.Sidebar Position":"n1","OneeChan.Disable In Catalog View":"sfalse","OneeChan.SS-like Sidebar":"sfalse","OneeChan.Minimal Sidebar":"strue","OneeChan.Autohide Style":"n2","OneeChan.Transparent QR":"sfalse","OneeChan.Remove Background":"sfalse","OneeChan.Remove Controls":"strue","OneeChan.Expanding Form Inputs":"strue","OneeChan.Force QR to Sidebar Size":"sfalse","OneeChan.Hide Mascots in Catalog":"strue","OneeChan.Mascots Overlap Posts":"sfalse","OneeChan.Reduce Mascot Opacity":"sfalse","OneeChan.Grayscale Mascots":"sfalse","OneeChan.Fit Width":"strue","OneeChan.Show Reply Header":"strue","OneeChan.Show Post Info On Hover":"sfalse","OneeChan.Show File Info":"strue","OneeChan.Underline QuoteLinks":"sfalse","OneeChan.Indent OP":"sfalse","OneeChan.Allow Wrapping Around OP":"sfalse","OneeChan.OP Background":"sfalse","OneeChan.Recolor Even Replies":"sfalse","OneeChan.Reduce Thumbnail Opacity":"sfalse","OneeChan.Backlink Icons":"strue","OneeChan.Backlinks on Bottom":"sfalse","OneeChan.Borders":"n2","OneeChan.Margin Between Replies":"s\"-2\"","OneeChan.Post Message Margin":"n2","OneeChan.Justified Text":"strue","OneeChan.Show Background":"sfalse","OneeChan.Unified Thumbnail Size":"sfalse","OneeChan.Show Header Background Gradient":"strue","OneeChan.Show Header Shadow":"strue","OneeChan.Highlight Current Board":"strue","OneeChan.Highlight (OP) quotes":"sfalse","OneeChan.Highlight (You) quotes":"sfalse","OneeChan.Post Decoration Style":"n0","OneeChan.Post Decoration Width":"n1","OneeChan.Custom Decoration Width":"n0","OneeChan.Post Highlight Style":"s\"solid\"","OneeChan.Font Family":"s\"Helvetica Rounded\"","OneeChan.Font Size":"n13","OneeChan.Backlink Font Size":"n9","OneeChan.Bitmap Font":"sfalse","OneeChan.Version Fix":"n1","OneeChan.Selected Theme":"n26","OneeChan.NSFW Theme":"n26","OneeChan.Mascots":"s[{\"img\":\"http://i.imgur.com/BstUsVj.png\",\"flip\":false,\"offset\":0,\"hoffset\":0,\"name\":\"Patchouli\",\"width\":\"250px\",\"height\":\"auto\"}]","OneeChan.Themes":"s[]","OneeChan.Hidden Themes":"s[]","OneeChan.Selected Mascots":"s[]","OneeChan.Hidden Mascots":"s[]"},"ts":1574009788217},"enabled":true,"position":2,"file_url":"https://greasyfork.org/scripts/7751-oneechan/code/OneeChan.user.js","uuid":"58de734c-9d34-4b18-9f73-48ee125cc107","source":""},{"name":"ImperiaAlarm","options":{"check_for_updates":true,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_arrayleft":false,"compat_uW_gmonkey":false,"compat_forvarin":false,"noframes":null,"awareOfChrome":false,"run_at":null,"override":{"use_includes":[],"orig_includes":["https://imperiaonline.org/*"],"merge_includes":true,"use_matches":[],"orig_matches":["*.imperiaonline.org/imperia/game_v6/game/village.php"],"merge_matches":true,"use_excludes":[],"orig_excludes":[],"merge_excludes":true,"use_connects":[],"merge_connects":true,"use_blockers":[],"orig_run_at":"document-idle","orig_noframes":null}},"storage":{"data":{},"ts":1574009788235},"enabled":false,"position":3,"file_url":"https://github.com/argorar/Imperia-Scripts/raw/master/ImperiaAlarm.user.js","uuid":"1e76cdc9-5415-45c2-902a-e562ebc6382f","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgIEltcGVyaWFBbGFybQovLyBAbmFtZXNwYWNlICAgaHR0cHM6Ly9pbXBlcmlhb25saW5lLm9yZwovLyBAaW5jbHVkZSAgICAgaHR0cHM6Ly9pbXBlcmlhb25saW5lLm9yZy8qCi8vIEBpY29uICAgICAgICBodHRwczovL2loY2RuMy5pb2ltZy5vcmcvaW92NmxpdmUvZ3VpL2Zhdmljb24ucG5nCi8vIEBhdXRob3IgICAgICBhcmdvcmFyCi8vIEBtYXRjaCAgICAgICAqLmltcGVyaWFvbmxpbmUub3JnL2ltcGVyaWEvZ2FtZV92Ni9nYW1lL3ZpbGxhZ2UucGhwCi8vIEByZXF1aXJlICAgICBodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vTmlja2Vyc29mdC9wdXNoLmpzL21hc3Rlci9iaW4vcHVzaC5taW4uanMKLy8gQGdyYW50ICAgICAgIG5vbmUKLy8gQHVwZGF0ZVVSTCAgICBodHRwczovL2dpdGh1Yi5jb20vYXJnb3Jhci9JbXBlcmlhLVNjcmlwdHMvcmF3L21hc3Rlci9JbXBlcmlhQWxhcm0udXNlci5qcwovLyBAZG93bmxvYWRVUkwgIGh0dHBzOi8vZ2l0aHViLmNvbS9hcmdvcmFyL0ltcGVyaWEtU2NyaXB0cy9yYXcvbWFzdGVyL0ltcGVyaWFBbGFybS51c2VyLmpzCi8vIEB2ZXJzaW9uICAgICAxLjMuNgovLyA9PS9Vc2VyU2NyaXB0PT0KCihmdW5jdGlvbigpIHsKCiAgInVzZSBzdHJpY3QiOwoKICBzZXRJbnRlcnZhbCgibG9jYXRpb24ucmVsb2FkKCkiLCA2MDAwMDApOwoKICBmdW5jdGlvbiBhZGRKUXVlcnkoY2FsbGJhY2spIHsKICAgIHZhciBzY3JpcHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzY3JpcHQiKTsKICAgIHNjcmlwdC5zZXRBdHRyaWJ1dGUoInNyYyIsICIvL2FqYXguZ29vZ2xlYXBpcy5jb20vYWpheC9saWJzL2pxdWVyeS8xL2pxdWVyeS5taW4uanMiKTsKICAgIHNjcmlwdC5hZGRFdmVudExpc3RlbmVyKCJsb2FkIiwgZnVuY3Rpb24oKSB7CiAgICAgIHZhciBzY3JpcHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzY3JpcHQiKTsKICAgICAgc2NyaXB0LnRleHRDb250ZW50ID0gIndpbmRvdy5qUT1qUXVlcnkubm9Db25mbGljdCh0cnVlKTsoIiArIGNhbGxiYWNrLnRvU3RyaW5nKCkgKyAiKSgpOyI7CiAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoc2NyaXB0KTsKICAgIH0sIGZhbHNlKTsKICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoc2NyaXB0KTsKICB9CgogIGZ1bmN0aW9uIHNvbmlkbygpIHsKICAgIGxldCBzb3VuZCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIm9iamVjdCIpOwogICAgc291bmQuc2V0QXR0cmlidXRlKCJ3aWR0aCIsICI1cHgiKTsKICAgIHNvdW5kLnNldEF0dHJpYnV0ZSgiaGVpZ2h0IiwgIjVweCIpOwogICAgc291bmQuc2V0QXR0cmlidXRlKCJkYXRhIiwgImh0dHBzOi8vZnJlZXNvdW5kLm9yZy9kYXRhL3ByZXZpZXdzLzI1NC8yNTQ4MTlfNDU5Nzc5NS1scS5tcDMiKTsKICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoc291bmQpOwogIH0KCiAgZnVuY3Rpb24gdW5kZXJBdHRhY2soKSB7CiAgICBsZXQgcGVyc29uYWxlcyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoInVpLWljb24gYXR0YWNrLW1lIilbMF07CiAgICBsZXQgYWxpYW56YSA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoInVpLWljb24gYXR0YWNrLWFsbGlhbmNlIilbMF07CiAgICByZXR1cm4gcGVyc29uYWxlcyAhPSBudWxsIHx8IGFsaWFuemEgIT0gbnVsbDsKICB9CiAgLy9mYWxzZTogcHJpbWVyYSB2ZXogLCB0cnVlOiBubyBlcyBsYSBwcmltZXJhIHZlegogIHZhciB1bmRlckF0dGFja0ZsYWcgPSBmYWxzZTsKCiAgZnVuY3Rpb24gZmlyc3RBdHRhY2soKSB7CiAgICBkb2N1bWVudC5sb2NhdGlvbi5ocmVmID0gImphdmFzY3JpcHQ6dm9pZCh4YWpheF92aWV3TWlzc2lvbnMoY29udGFpbmVyLm9wZW4oe3NhdmVOYW1lOidtaXNzaW9ucycsIHRpdGxlOidNaXMgbWlzaW9uZXMnfSksIHt0YWI6J2luY29taW5nJ30pKSI7IC8vYWJyZSBsYXMgbWlzaW9uZXMKICAgIGxldCB0ZEVsZW0gPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJudW1lcmFsIHRvb2x0aXAtYXJyb3cgdWktcGFzcyIpOyAvL2xpc3RhIGRlIGF0YXF1ZXMKICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGRFbGVtLmxlbmd0aDsgaSsrKSB7CiAgICAgIGxldCB0ZFRleHQgPSB0ZEVsZW1baV0uaW5uZXJUZXh0OyAvL27Dum1lcm8gZGVsIGVqZXJjaXRvCiAgICAgIGlmICh0ZFRleHQubGVuZ3RoID4gMykgeyAvL2F0YXF1ZSBtYXlvciBhIDk5OSBzb2xkYWRvcwogICAgICAgIHVuZGVyQXR0YWNrRmxhZyA9IHRydWU7CiAgICAgICAgc29uaWRvKCk7CiAgICAgICAgYnJlYWs7CiAgICAgIH0KICAgIH0KICB9CgogIHNldEludGVydmFsKAogICAgZnVuY3Rpb24gY2hlY2tlcigpIHsKICAgICAgaWYgKHVuZGVyQXR0YWNrKCkpIHsKICAgICAgICBpZiAodW5kZXJBdHRhY2tGbGFnID09PSBmYWxzZSkgewogICAgICAgICAgZmlyc3RBdHRhY2soKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgc29uaWRvKCk7CiAgICAgICAgfQogICAgICB9IGVsc2UgeyAvL05vIGhheSBhdGFxdWVzCiAgICAgICAgdW5kZXJBdHRhY2tGbGFnID0gZmFsc2U7IC8vc2UgcmVpbmljaWEgZWwgZXN0YWRvCiAgICAgIH0KICAgIH0sIDUwMDApOwoKICBmdW5jdGlvbiBub3RpZmljYXRpb24odGl0bGUsIG1zZykgewogICAgUHVzaC5jcmVhdGUodGl0bGUsIHsKICAgICAgYm9keTogbXNnLAogICAgICBpY29uOiAiaHR0cHM6Ly9paGNkbjMuaW9pbWcub3JnL2lvdjZsaXZlL2d1aS9mYXZpY29uLnBuZyIsCiAgICAgIHRpbWVvdXQ6IDQwMDAsCiAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uKCkgewogICAgICAgIHdpbmRvdy5mb2N1cygpOwogICAgICAgIHRoaXMuY2xvc2UoKTsKICAgICAgfQogICAgfSk7CiAgfQoKICBub3RpZmljYXRpb24oIkluZm9ybWFjacOzbiIsICJBbGFybWEgYWN0aXZhZGEgY29ycmVjdGFtZW50ZS4iKTsKCn0pKCk7Cg==","requires":[{"meta":{"name":"push.min.js","url":"https://raw.githubusercontent.com/Nickersoft/push.js/master/bin/push.min.js","ts":1574009788224,"mimetype":"text/javascript"},"source":""}]},{"name":"VolaNailer","options":{"check_for_updates":true,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_arrayleft":false,"compat_uW_gmonkey":false,"compat_forvarin":false,"noframes":null,"awareOfChrome":false,"run_at":null,"override":{"use_includes":[],"orig_includes":["https://volafile.org/r/*"],"merge_includes":true,"use_matches":[],"orig_matches":["https://volafile.org/r/*"],"merge_matches":true,"use_excludes":[],"orig_excludes":[],"merge_excludes":true,"use_connects":[],"merge_connects":true,"use_blockers":[],"orig_run_at":"document-idle","orig_noframes":null}},"storage":{"data":{},"ts":1574009788276},"enabled":true,"position":4,"file_url":"https://github.com/volafiled/volascripts/raw/master/volanail.user.js","uuid":"a2a4e39c-4c01-4fb3-b74e-0c6ee7e6e2c6","source":"","requires":[{"meta":{"name":"gm4-polyfill.js","url":"https://greasemonkey.github.io/gm4-polyfill/gm4-polyfill.js","ts":1574009788254,"mimetype":"text/javascript"},"source":"LyoKVGhpcyBoZWxwZXIgc2NyaXB0IGJyaWRnZXMgY29tcGF0aWJpbGl0eSBiZXR3ZWVuIHRoZSBHcmVhc2Vtb25rZXkgNCBBUElzIGFuZApleGlzdGluZy9sZWdhY3kgQVBJcy4gIFNheSBmb3IgZXhhbXBsZSB5b3VyIHVzZXIgc2NyaXB0IGluY2x1ZGVzCgogICAgLy8gQGdyYW50IEdNX2dldFZhbHVlCgpBbmQgeW91J2QgbGlrZSB0byBiZSBjb21wYXRpYmxlIHdpdGggYm90aCBHcmVhc2Vtb25rZXkgMyBhbmQgR3JlYXNlbW9ua2V5IDQKKGFuZCBmb3IgdGhhdCBtYXR0ZXIgYWxsIHZlcnNpb25zIG9mIFZpb2xlbnRtb25rZXksIFRhbXBlcm1vbmtleSwgYW5kIGFueSBvdGhlcgp1c2VyIHNjcmlwdCBlbmdpbmUpLiAgQWRkOgoKICAgIC8vIEBncmFudCBHTS5nZXRWYWx1ZQogICAgLy8gQHJlcXVpcmUgaHR0cHM6Ly9ncmVhc2Vtb25rZXkuZ2l0aHViLmlvL2dtNC1wb2x5ZmlsbC9nbTQtcG9seWZpbGwuanMKCkFuZCBzd2l0Y2ggdG8gdGhlIG5ldyAoR00tZG90KSBBUElzLCB3aGljaCByZXR1cm4gcHJvbWlzZXMuICBJZiB5b3VyIHNjcmlwdAppcyBydW5uaW5nIGluIGFuIGVuZ2luZSB0aGF0IGRvZXMgbm90IHByb3ZpZGUgdGhlIG5ldyBhc3luY2hyb25vdXMgQVBJcywgdGhpcwpoZWxwZXIgd2lsbCBhZGQgdGhlbSwgYmFzZWQgb24gdGhlIG9sZCBBUElzLgoKSWYgeW91IHVzZSBgYXdhaXRgIGF0IHRoZSB0b3AgbGV2ZWwsIHlvdSdsbCBuZWVkIHRvIHdyYXAgeW91ciBzY3JpcHQgaW4gYW4KYGFzeW5jYCBmdW5jdGlvbiB0byBiZSBjb21wYXRpYmxlIHdpdGggYW55IHVzZXIgc2NyaXB0IGVuZ2luZSBiZXNpZGVzCkdyZWFzZW1vbmtleSA0LgoKICAgIChhc3luYyAoKSA9PiB7CiAgICBsZXQgeCA9IGF3YWl0IEdNLmdldFZhbHVlKCd4Jyk7CiAgICB9KSgpOwoqLwoKaWYgKHR5cGVvZiBHTSA9PSAndW5kZWZpbmVkJykgewogIHRoaXMuR00gPSB7fTsKfQoKCmlmICh0eXBlb2YgR01fYWRkU3R5bGUgPT0gJ3VuZGVmaW5lZCcpIHsKICB0aGlzLkdNX2FkZFN0eWxlID0gKGFDc3MpID0+IHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIGxldCBoZWFkID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2hlYWQnKVswXTsKICAgIGlmIChoZWFkKSB7CiAgICAgIGxldCBzdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7CiAgICAgIHN0eWxlLnNldEF0dHJpYnV0ZSgndHlwZScsICd0ZXh0L2NzcycpOwogICAgICBzdHlsZS50ZXh0Q29udGVudCA9IGFDc3M7CiAgICAgIGhlYWQuYXBwZW5kQ2hpbGQoc3R5bGUpOwogICAgICByZXR1cm4gc3R5bGU7CiAgICB9CiAgICByZXR1cm4gbnVsbDsKICB9Owp9CgoKaWYgKHR5cGVvZiBHTV9yZWdpc3Rlck1lbnVDb21tYW5kID09ICd1bmRlZmluZWQnKSB7CiAgdGhpcy5HTV9yZWdpc3Rlck1lbnVDb21tYW5kID0gKGNhcHRpb24sIGNvbW1hbmRGdW5jLCBhY2Nlc3NLZXkpID0+IHsKICAgIGlmICghZG9jdW1lbnQuYm9keSkgewogICAgICBpZiAoZG9jdW1lbnQucmVhZHlTdGF0ZSA9PT0gJ2xvYWRpbmcnCiAgICAgICAgJiYgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50ICYmIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5sb2NhbE5hbWUgPT09ICdodG1sJykgewogICAgICAgIG5ldyBNdXRhdGlvbk9ic2VydmVyKChtdXRhdGlvbnMsIG9ic2VydmVyKSA9PiB7CiAgICAgICAgICBpZiAoZG9jdW1lbnQuYm9keSkgewogICAgICAgICAgICBvYnNlcnZlci5kaXNjb25uZWN0KCk7CiAgICAgICAgICAgIEdNX3JlZ2lzdGVyTWVudUNvbW1hbmQoY2FwdGlvbiwgY29tbWFuZEZ1bmMsIGFjY2Vzc0tleSk7CiAgICAgICAgICB9CiAgICAgICAgfSkub2JzZXJ2ZShkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsIHtjaGlsZExpc3Q6IHRydWV9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICBjb25zb2xlLmVycm9yKCdHTV9yZWdpc3Rlck1lbnVDb21tYW5kIGdvdCBubyBib2R5LicpOwogICAgICB9CiAgICAgIHJldHVybjsKICAgIH0KICAgIGxldCBjb250ZXh0TWVudSA9IGRvY3VtZW50LmJvZHkuZ2V0QXR0cmlidXRlKCdjb250ZXh0bWVudScpOwogICAgbGV0IG1lbnUgPSAoY29udGV4dE1lbnUgPyBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdtZW51IycgKyBjb250ZXh0TWVudSkgOiBudWxsKTsKICAgIGlmICghbWVudSkgewogICAgICBtZW51ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbWVudScpOwogICAgICBtZW51LnNldEF0dHJpYnV0ZSgnaWQnLCAnZ20tcmVnaXN0ZXJlZC1tZW51Jyk7CiAgICAgIG1lbnUuc2V0QXR0cmlidXRlKCd0eXBlJywgJ2NvbnRleHQnKTsKICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChtZW51KTsKICAgICAgZG9jdW1lbnQuYm9keS5zZXRBdHRyaWJ1dGUoJ2NvbnRleHRtZW51JywgJ2dtLXJlZ2lzdGVyZWQtbWVudScpOwogICAgfQogICAgbGV0IG1lbnVJdGVtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbWVudWl0ZW0nKTsKICAgIG1lbnVJdGVtLnRleHRDb250ZW50ID0gY2FwdGlvbjsKICAgIG1lbnVJdGVtLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgY29tbWFuZEZ1bmMsIHRydWUpOwogICAgbWVudS5hcHBlbmRDaGlsZChtZW51SXRlbSk7CiAgfTsKfQoKCmlmICh0eXBlb2YgR01fZ2V0UmVzb3VyY2VUZXh0ID09ICd1bmRlZmluZWQnKSB7CiAgdGhpcy5HTV9nZXRSZXNvdXJjZVRleHQgPSAoYVJlcykgPT4gewogICAgJ3VzZSBzdHJpY3QnOwogICAgcmV0dXJuIEdNLmdldFJlc291cmNlVXJsKGFSZXMpCiAgICAgIC50aGVuKHVybCA9PiBmZXRjaCh1cmwpKQogICAgICAudGhlbihyZXNwID0+IHJlc3AudGV4dCgpKQogICAgICAuY2F0Y2goZnVuY3Rpb24oZXJyb3IpIHsKICAgICAgICBHTS5sb2coJ1JlcXVlc3QgZmFpbGVkJywgZXJyb3IpOwogICAgICAgIHJldHVybiBudWxsOwogICAgICB9KTsKICB9Owp9CgoKT2JqZWN0LmVudHJpZXMoewogICdsb2cnOiBjb25zb2xlLmxvZy5iaW5kKGNvbnNvbGUpLCAgLy8gUGFsZSBNb29uIGNvbXBhdGliaWxpdHkuICBTZWUgIzEzLgogICdpbmZvJzogR01faW5mbywKfSkuZm9yRWFjaCgoW25ld0tleSwgb2xkXSkgPT4gewogIGlmIChvbGQgJiYgKHR5cGVvZiBHTVtuZXdLZXldID09ICd1bmRlZmluZWQnKSkgewogICAgR01bbmV3S2V5XSA9IG9sZDsKICB9Cn0pOwoKCk9iamVjdC5lbnRyaWVzKHsKICAnR01fYWRkU3R5bGUnOiAnYWRkU3R5bGUnLAogICdHTV9kZWxldGVWYWx1ZSc6ICdkZWxldGVWYWx1ZScsCiAgJ0dNX2dldFJlc291cmNlVVJMJzogJ2dldFJlc291cmNlVXJsJywKICAnR01fZ2V0VmFsdWUnOiAnZ2V0VmFsdWUnLAogICdHTV9saXN0VmFsdWVzJzogJ2xpc3RWYWx1ZXMnLAogICdHTV9ub3RpZmljYXRpb24nOiAnbm90aWZpY2F0aW9uJywKICAnR01fb3BlbkluVGFiJzogJ29wZW5JblRhYicsCiAgJ0dNX3JlZ2lzdGVyTWVudUNvbW1hbmQnOiAncmVnaXN0ZXJNZW51Q29tbWFuZCcsCiAgJ0dNX3NldENsaXBib2FyZCc6ICdzZXRDbGlwYm9hcmQnLAogICdHTV9zZXRWYWx1ZSc6ICdzZXRWYWx1ZScsCiAgJ0dNX3htbGh0dHBSZXF1ZXN0JzogJ3htbEh0dHBSZXF1ZXN0JywKICAnR01fZ2V0UmVzb3VyY2VUZXh0JzogJ2dldFJlc291cmNlVGV4dCcsCn0pLmZvckVhY2goKFtvbGRLZXksIG5ld0tleV0pID0+IHsKICBsZXQgb2xkID0gdGhpc1tvbGRLZXldOwogIGlmIChvbGQgJiYgKHR5cGVvZiBHTVtuZXdLZXldID09ICd1bmRlZmluZWQnKSkgewogICAgR01bbmV3S2V5XSA9IGZ1bmN0aW9uKC4uLmFyZ3MpIHsKICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHsKICAgICAgICB0cnkgewogICAgICAgICAgcmVzb2x2ZShvbGQuYXBwbHkodGhpcywgYXJncykpOwogICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgIHJlamVjdChlKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfTsKICB9Cn0pOwo="},{"meta":{"name":"dry.min.js","url":"https://cdn.jsdelivr.net/gh/volafiled/volascripts@a9c0424e5498deea9fd437c15b2137c3bec07c61/dry.min.js","ts":1574009788256,"mimetype":"text/javascript"},"source":"LyoqCiAqIE1pbmlmaWVkIGJ5IGpzRGVsaXZyIHVzaW5nIFRlcnNlciB2My4xNC4xLgogKiBPcmlnaW5hbCBmaWxlOiAvZ2gvdm9sYWZpbGVkL3ZvbGFzY3JpcHRzQGE5YzA0MjRlNTQ5OGRlZWE5ZmQ0MzdjMTViMjEzN2MzYmVjMDdjNjEvZHJ5LmpzCiAqIAogKiBEbyBOT1QgdXNlIFNSSSB3aXRoIGR5bmFtaWNhbGx5IGdlbmVyYXRlZCBmaWxlcyEgTW9yZSBpbmZvcm1hdGlvbjogaHR0cHM6Ly93d3cuanNkZWxpdnIuY29tL3VzaW5nLXNyaS13aXRoLWR5bmFtaWMtZmlsZXMKICovCmNvbnN0IGRyeT1mdW5jdGlvbigpeyJ1c2Ugc3RyaWN0Ijtjb25zdCB0PXRoaXMudW5zYWZlV2luZG93fHx3aW5kb3csZT1TeW1ib2woKTtjbGFzcyBue2NvbnN0cnVjdG9yKCl7dGhpc1tlXT1uZXcgTWFwfW9uKHQsbil7bGV0IG89dGhpc1tlXS5nZXQodCk7b3x8dGhpc1tlXS5zZXQodCxvPW5ldyBTZXQpLG8uYWRkKG4pfW9mZih0LG4pe2NvbnN0IG89dGhpc1tlXSxpPW8uZ2V0KHQpO2kmJihpLmRlbGV0ZShuKSxpLnNpemV8fG8uZGVsZXRlKHQpKX1vbmNlKHQsZSwuLi5uKXtsZXQgbz0oLi4ubik9Pnt0cnl7cmV0dXJuIGUoLi4ubil9ZmluYWxseXt0aGlzLm9mZih0LG8pfX07cmV0dXJuIHRoaXMub24odCxvLC4uLm4pfWVtaXQodCwuLi5uKXtjb25zdCBvPXRoaXNbZV0uZ2V0KHQpO2lmKG8pZm9yKGxldCBlIG9mIEFycmF5LmZyb20obykpdHJ5e2UoLi4ubil9Y2F0Y2gobil7Y29uc29sZS5lcnJvcihgRXZlbnQgaGFuZGxlciAke2V9IGZvciAke3R9IGZhaWxlZGAsbil9fWVtaXRTb29uKHQsLi4uZSl7c2V0VGltZW91dCgoKT0+dGhpcy5lbWl0KHQsLi4uZSkpfX1jb25zdCBvPW5ldyBuOyJpbnRlcmFjdGl2ZSI9PT1kb2N1bWVudC5yZWFkeVN0YXRlfHwiY29tcGxldGUiPT09ZG9jdW1lbnQucmVhZHlTdGF0ZT9vLmVtaXRTb29uKCJkb20iLG51bGwsITEpOmFkZEV2ZW50TGlzdGVuZXIoIkRPTUNvbnRlbnRMb2FkZWQiLGZ1bmN0aW9uIHQoZSl7cmVtb3ZlRXZlbnRMaXN0ZW5lcigiRE9NQ29udGVudExvYWRlZCIsdCwhMCksby5lbWl0KCJkb20iLGUsITApfSwhMCksImNvbXBsZXRlIj09PWRvY3VtZW50LnJlYWR5U3RhdGU/by5lbWl0U29vbigibG9hZCIsbnVsbCwhMSk6YWRkRXZlbnRMaXN0ZW5lcigibG9hZCIsZnVuY3Rpb24gdChlKXtyZW1vdmVFdmVudExpc3RlbmVyKCJsb2FkIix0LCEwKSxvLmVtaXQoImxvYWQiLGUsITApfSwhMCk7bGV0IGk9bnVsbDt0cnl7aT0od2luZG93LlJvb218fHQuUm9vbSkucHJvdG90eXBlLl9leHRlbnNpb25zLmNvbm5lY3Rpb24ucHJvdG90eXBlLnJvb20uZXh0ZW5zaW9uc31jYXRjaChlKXtvLm9uKCJsb2FkIiwoKT0+e2k9KHdpbmRvdy5Sb29tfHx0LlJvb20pLnByb3RvdHlwZS5fZXh0ZW5zaW9ucy5jb25uZWN0aW9uLnByb3RvdHlwZS5yb29tLmV4dGVuc2lvbnN9KX1sZXQgcj1mdW5jdGlvbihlKXtyZXR1cm4gdC5KU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KGUpKX0scz10aGlzLmV4cG9ydEZ1bmN0aW9uO3N8fChzPSgodCxlKT0+dCkscj0odD0+d2luZG93LkpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodCkpKSk7Y29uc3QgYT1mdW5jdGlvbihlLG4sbyxyKXtuPW4uc3BsaXQoIi4iKTtsZXQgYz10aGlzO2ZvcihsZXQgdCBvZiBuKXtpZighKHQgaW4gYykpdGhyb3cgbmV3IEVycm9yKGBCaW5kaW5nIG5vdCBhdmFpbGFibGU6ICR7dH1gKTtpZighKGM9Y1t0XSkpdGhyb3cgbmV3IEVycm9yKGBCaW5kaW5nIG5vdCBhdmFpbGFibGU6ICR7dH1gKX1pZihlKXtpZighYy5wcm90b3R5cGV8fCJjb21wbGV0ZSI9PT1kb2N1bWVudC5yZWFkeVN0YXRlKXJldHVybiBjb25zb2xlLndhcm4oImJpbmRpbmcgbGF0ZSwgc2tpcHBpbmcgcHJvdG90eXBlLCB0aGlzIG1pZ2h0IG5vdCB3b3JrIixuLG8pLGEuY2FsbChpLCExLG4sbyxyKTtpZighKGM9Yy5wcm90b3R5cGUpKXRocm93IG5ldyBFcnJvcigiQmluZGluZyBwcm90b3R5cGUgbm90IGF2YWlsYWJsZSIpfWxldCBsPWNbb107aWYoIWwpdGhyb3cgbmV3IEVycm9yKCJUYXJnZXQgbm90IGF2YWlsYWJsZSIpO3JldHVybiBjW29dPXMoZnVuY3Rpb24oLi4udCl7cmV0dXJuIHIuY2FsbCh0aGlzLGwuYmluZCh0aGlzKSwuLi50KX0sdCksY1tvXS5iaW5kKGMpfSxjPSguLi5lKT0+YS5jYWxsKCh3aW5kb3cuUm9vbXx8dC5Sb29tKS5wcm90b3R5cGUuX2V4dGVuc2lvbnMsITAsLi4uZSk7bGV0IGw9d2luZG93LmNvbmZpZ3x8dC5jb25maWc7cmV0dXJuIGx8fG8ub25jZSgiZG9tIiwoKT0+eyhsPXdpbmRvdy5jb25maWd8fHQuY29uZmlnKXx8by5vbmNlKCJsb2FkIiwoKT0+e2w9d2luZG93LmNvbmZpZ3x8dC5jb25maWd9KX0pLHtvbjpvLm9uLmJpbmQobyksb2ZmOm8ub2ZmLmJpbmQobyksb25jZTpvLm9uY2UuYmluZChvKSxlbWl0Om8uZW1pdC5iaW5kKG8pLGdldCBjb25maWcoKXtyZXR1cm4gbH0sZ2V0IGV4dHMoKXtyZXR1cm4gaX0sdW5zYWZlV2luZG93OnQscmVwbGFjZUVhcmx5OmMscmVwbGFjZUxhdGUoLi4udCl7cmV0dXJuIGEuY2FsbCh0aGlzLmV4dHMsITEsLi4udCl9LGFwcGVuZE1lc3NhZ2U6KGUsbixvKT0+e2xldCBzPXtkb250c2F2ZTohMCxzdGFmZjohMCxoaWdobGlnaHQ6ITB9O2lmKG8mJk9iamVjdC5hc3NpZ24ocyxvKSxuLnRyaW0pe2xldCBlPW5ldyB0LkFycmF5O2UucHVzaCh7dHlwZToidGV4dCIsdmFsdWU6bn0pLG49ZX1yZXR1cm4gaS5jaGF0LnNob3dNZXNzYWdlKGUscihuKSxyKHMpKX0sZXhwb3J0RnVuY3Rpb246cyxleHBvcnRPYmplY3Q6cix1bmlxdWU6ZnVuY3Rpb24odCxlKXtyZXR1cm4gZT90LmZpbHRlcihmdW5jdGlvbih0KXtyZXR1cm4hISh0PWUodCkpJiYhdGhpcy5oYXModCkmJiEhdGhpcy5hZGQodCl9LG5ldyBTZXQpOnQuZmlsdGVyKGZ1bmN0aW9uKHQpe3JldHVybiEhdCYmIXRoaXMuaGFzKHQpJiYhIXRoaXMuYWRkKHQpfSxuZXcgU2V0KX0sRXZlbnRFbWl0dGVyOm4sQ29tbWFuZHM6Y2xhc3N7Y29uc3RydWN0b3IoKXtjKCJjaGF0Iiwib25Db21tYW5kIiwodCxlLG4sLi4ubyk9PntsZXQgaT10aGlzW2VdO2lmKCFpfHwhMT09PWkuY2FsbCh0aGlzLG4sbykpcmV0dXJuIG8udW5zaGlmdChuKSxvLnVuc2hpZnQoZSksdCguLi5yKG8pKX0pfX0sTWVzc2FnZUZpbHRlcjpjbGFzc3tjb25zdHJ1Y3Rvcigpe3RoaXMuX3JlcGxhY2UoImFkZE1lc3NhZ2UiKSx0aGlzLl9yZXBsYWNlKCJzaG93TWVzc2FnZSIpfV9yZXBsYWNlKHQsZSl7aWYoIXRoaXNbdF0pcmV0dXJuO2xldCBuPXRoaXNbdF0uYmluZCh0aGlzKTtjKCJjaGF0Iix0LCguLi5lKT0+e3RyeXtpZighMT09PW4oLi4uZSkpcmV0dXJufWNhdGNoKGUpe2NvbnNvbGUuZXJyb3IodCwidGhyZXciLGUpfXJldHVybiBlLnNoaWZ0KCkoLi4uZSl9KX19LHZlcnNpb246IjAuNCJ9fS5jYWxsKHRoaXMpOwovLyMgc291cmNlTWFwcGluZ1VSTD0vc20vYWExZjZjNzMzYjNlYTNjMGJiYTZlYjdiMjhiMDZiMzNhY2YxMGE4MmI5MzU0ZDdiNmM2ZDhlNDEwY2FkOGRiNC5tYXA="},{"meta":{"name":"finally.min.js","url":"https://cdn.jsdelivr.net/gh/volafiled/node-parrot@acb622d5d9af34f0de648385e6ab4d2411373037/parrot/finally.min.js","ts":1574009788258,"mimetype":"text/javascript"},"source":"LyoqCiAqIE1pbmlmaWVkIGJ5IGpzRGVsaXZyIHVzaW5nIFRlcnNlciB2My4xNC4xLgogKiBPcmlnaW5hbCBmaWxlOiAvZ2gvdm9sYWZpbGVkL25vZGUtcGFycm90QGFjYjYyMmQ1ZDlhZjM0ZjBkZTY0ODM4NWU2YWI0ZDI0MTEzNzMwMzcvcGFycm90L2ZpbmFsbHkuanMKICogCiAqIERvIE5PVCB1c2UgU1JJIHdpdGggZHluYW1pY2FsbHkgZ2VuZXJhdGVkIGZpbGVzISBNb3JlIGluZm9ybWF0aW9uOiBodHRwczovL3d3dy5qc2RlbGl2ci5jb20vdXNpbmctc3JpLXdpdGgtZHluYW1pYy1maWxlcwogKi8KInVzZSBzdHJpY3QiO2Z1bmN0aW9uIG5vdGhpbmcoKXt9UHJvbWlzZS5wcm90b3R5cGUuZmluYWxseXx8T2JqZWN0LmFzc2lnbihQcm9taXNlLnByb3RvdHlwZSx7ZmluYWxseSh0KXtyZXR1cm4gdGhpcy50aGVuKGZ1bmN0aW9uKGUpe2NvbnN0IG49dC5jYWxsJiZ0LmNhbGwoKXx8dDtyZXR1cm4gUHJvbWlzZS5yZXNvbHZlKG4pLnRoZW4oZnVuY3Rpb24oKXtyZXR1cm4gZX0pfSxmdW5jdGlvbihlKXtjb25zdCBuPXQuY2FsbCYmdC5jYWxsKCl8fHQ7cmV0dXJuIFByb21pc2UucmVzb2x2ZShuKS50aGVuKGZ1bmN0aW9uKCl7cmV0dXJuIFByb21pc2UucmVqZWN0KGUpfSl9KX19KSxQcm9taXNlLnByb3RvdHlwZS5pZ25vcmV8fE9iamVjdC5hc3NpZ24oUHJvbWlzZS5wcm90b3R5cGUse2lnbm9yZSgpe3JldHVybiB0aGlzLmNhdGNoKG5vdGhpbmcpfX0pOwovLyMgc291cmNlTWFwcGluZ1VSTD0vc20vOTE1NzcxNzVhN2QzZDY5NWQ3ZmIyNWY4Y2QyMjQ3YTViMmE5Y2M2NGRmNWEzM2IwZGZkNzdlYWM1MjUxNGQyMC5tYXA="},{"meta":{"name":"pool.min.js","url":"https://cdn.jsdelivr.net/gh/volafiled/node-parrot@acb622d5d9af34f0de648385e6ab4d2411373037/parrot/pool.min.js","ts":1574009788259,"mimetype":"text/javascript"},"source":"LyoqCiAqIE1pbmlmaWVkIGJ5IGpzRGVsaXZyIHVzaW5nIFRlcnNlciB2My4xNC4xLgogKiBPcmlnaW5hbCBmaWxlOiAvZ2gvdm9sYWZpbGVkL25vZGUtcGFycm90QGFjYjYyMmQ1ZDlhZjM0ZjBkZTY0ODM4NWU2YWI0ZDI0MTEzNzMwMzcvcGFycm90L3Bvb2wuanMKICogCiAqIERvIE5PVCB1c2UgU1JJIHdpdGggZHluYW1pY2FsbHkgZ2VuZXJhdGVkIGZpbGVzISBNb3JlIGluZm9ybWF0aW9uOiBodHRwczovL3d3dy5qc2RlbGl2ci5jb20vdXNpbmctc3JpLXdpdGgtZHluYW1pYy1maWxlcwogKi8KInVzZSBzdHJpY3QiO2NsYXNzIFByb21pc2VQb29se2NvbnN0cnVjdG9yKHQpe3RoaXMuX2xpbWl0PU1hdGgubWF4KHR8fDUsMSksdGhpcy5faXRlbXM9W10sdGhpcy5fcnVubmluZz0wLHRoaXMuX25leHQ9dGhpcy5uZXh0LmJpbmQodGhpcyksT2JqZWN0LnNlYWwodGhpcyl9Z2V0IGxpbWl0KCl7cmV0dXJuIHRoaXMuX2xpbWl0fWdldCBydW5uaW5nKCl7cmV0dXJuIHRoaXMuX3J1bm5pbmd9Z2V0IHNjaGVkdWxlZCgpe3JldHVybiB0aGlzLl9pdGVtcy5sZW5ndGh9Z2V0IHRvdGFsKCl7cmV0dXJuIHRoaXMuc2NoZWR1bGVkK3RoaXMucnVubmluZ31zdGF0aWMgd3JhcE5ldyh0LGUsaSl7cmV0dXJuIG5ldyBQcm9taXNlUG9vbCh0KS53cmFwKGUsaSl9d3JhcCh0LGUpe3JldHVybiB0aGlzLnNjaGVkdWxlV2l0aENvbnRleHQuYmluZCh0aGlzLHQsZSl9c2NoZWR1bGUodCwuLi5lKXtyZXR1cm4gdGhpcy5zY2hlZHVsZVdpdGhDb250ZXh0KG51bGwsdCwuLi5lKX1zY2hlZHVsZVdpdGhDb250ZXh0KHQsZSwuLi5pKXtpZih0aGlzLl9ydW5uaW5nPHRoaXMubGltaXQpdHJ5e2NvbnN0IG49UHJvbWlzZS5yZXNvbHZlKGUuY2FsbCh0LC4uLmkpKTtyZXR1cm4gdGhpcy5fcnVubmluZysrLG4uZmluYWxseSh0aGlzLl9uZXh0KS5pZ25vcmUoKSxufWNhdGNoKHQpe3JldHVybiBQcm9taXNlLnJlamVjdCh0KX1jb25zdCBuPXtjdHg6dCxmbjplLGFyZ3M6aX0scz1uZXcgUHJvbWlzZSgodCxlKT0+e24ucmVzPXQsbi5yZWo9ZX0pO3JldHVybiB0aGlzLl9pdGVtcy5wdXNoKG4pLHN9bmV4dCgpe3RoaXMuX3J1bm5pbmctLTtjb25zdCB0PXRoaXMuX2l0ZW1zLnNoaWZ0KCk7aWYodCl0cnl7Y29uc3QgZT1Qcm9taXNlLnJlc29sdmUodC5mbi5jYWxsKHQuY3R4LC4uLnQuYXJncykpO3RoaXMuX3J1bm5pbmcrKyx0LnJlcyhlKSxlLmZpbmFsbHkodGhpcy5fbmV4dCkuaWdub3JlKCl9Y2F0Y2goZSl7dHJ5e3QucmVqKGUpfWZpbmFsbHl7dGhpcy5uZXh0KCl9fX19InVuZGVmaW5lZCIhPXR5cGVvZiBtb2R1bGUmJnZvaWQgMCE9PW1vZHVsZS5leHBvcnRzJiYoImZ1bmN0aW9uIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmUoIi4vZmluYWxseSIpLG1vZHVsZS5leHBvcnRzPXtQcm9taXNlUG9vbDpQcm9taXNlUG9vbH0pOwovLyMgc291cmNlTWFwcGluZ1VSTD0vc20vOTgyMmJjOGI1NDc0ZjYyNWFiY2FhMjI5OTJhZGY2Zjc4OWRkYzQzZGRmYjUyNTU0ZjExZWJkMjhhODVkOWRkMS5tYXA="}]},{"name":"EasyVideoDownload","options":{"check_for_updates":true,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_arrayleft":false,"compat_uW_gmonkey":false,"compat_forvarin":false,"noframes":null,"awareOfChrome":false,"run_at":null,"override":{"use_includes":[],"orig_includes":["http://*","https://*"],"merge_includes":true,"use_matches":[],"orig_matches":[],"merge_matches":true,"use_excludes":[],"orig_excludes":[],"merge_excludes":true,"use_connects":[],"merge_connects":true,"use_blockers":[],"orig_run_at":"document-end","orig_noframes":null}},"storage":{"data":{"ummyDetected":"s{\"w\":0}","showUmmyLanding":"s{\"w\":1}","onceShowYtTooltip":"s{\"w\":1}","onceShowYtTutorial":"s{\"w\":1}","version":"s{\"w\":\"7.15.14\"}","onceTrackAviaBar":"s{\"w\":0}","dprm":"n1543376742236","dblTrack":"s{\"w\":\"8f4a920e-6593-4797-b375-e378c061786a,1550932101134\"}","liteStorage":"s{\"w\":{\"countryTimeout\":1551018439,\"lastVersion\":\"8.8.2\",\"lastVersionExpire\":1551536841,\"fromIdTimeout\":1543398342,\"trackTimeout\":1550932341,\"countryExpire\":1551191241,\"fromId\":-1}}","country":"s{\"w\":\"co\"}","uuid":"s{\"w\":\"0154d35a-39ba-462c-88c2-956c75232e16\"}","sdc_data":"s{\"uid\":\"Y83ORff71zgjkRS67hSGtpxgIMc0HATV\",\"ses\":\"U8y0My55e8hCPnI1Wf6S8jQaO5dooZWW\",\"browserName\":\"ff\",\"lastFocusedUrl\":\"\",\"prev\":\"https://twitter.com/luoliuuu\",\"tgt\":\"<a href=\\\"/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;source=web&amp;cd=1&amp;ved=2ahUKEwiL3PicwLfgAhXuxlkKHa6EC70QFjAAegQIChAB&amp;url=https%3A%2F%2Fcybmeta.com%2Fobtener-la-url-de-la-pagina-actual-con-javascript-y-sus-componentes&amp;usg=AOvVaw2574GITsvfeMkstfRmgHZZ\\\" onmousedown=\\\"return rwt(this,'','','','1','AOvVaw2574GITsvfeMkstfRmgHZZ','','2ahUKEwiL3PicwLfgAhXuxlkKHa6EC70QFjAAegQIChAB','','',event)\\\" data-cthref=\\\"/url?sa=t&amp;rct=j&amp;q=&amp;esrc=s&amp;source=web&amp;cd=1&amp;ved=2ahUKEwiL3PicwLfgAhXuxlkKHa6EC70QFjAAegQIChAB&amp;url=https%3A%2F%2Fcybmeta.com%2Fobtener-la-url-de-la-pagina-actual-con-javascript-y-sus-componentes&amp;usg=AOvVaw2574GITsvfeMkstfRmgHZZ\\\"><h3 class=\\\"LC20lb\\\">Obtener la URL de la página actual con JavaScript (y sus ... - CybMeta</h3><br><div class=\\\"TbwUpd\\\"><cite class=\\\"iUh30 bc\\\">https://cybmeta.com › JavaScript</cite></div></a>\"}"},"ts":1574009788297},"enabled":false,"position":5,"file_url":"https://openuserjs.org/install/laidbacktempo/SaveFrom.net_helper.user.js","uuid":"4cfe3af5-d8fe-4783-abb5-941d49d95624","source":""},{"name":"Instagram Reloaded","options":{"check_for_updates":true,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_arrayleft":false,"compat_uW_gmonkey":false,"compat_forvarin":false,"noframes":null,"awareOfChrome":false,"run_at":null,"override":{"use_includes":[],"orig_includes":[],"merge_includes":true,"use_matches":[],"orig_matches":["*://*.instagram.com/*"],"merge_matches":true,"use_excludes":[],"orig_excludes":[],"merge_excludes":true,"use_connects":[],"merge_connects":true,"use_blockers":[],"orig_run_at":"document-idle","orig_noframes":null}},"storage":{"data":{},"ts":1574009788325},"enabled":true,"position":6,"file_url":"https://greasyfork.org/scripts/14755-instagram-reloaded/code/Instagram%20Reloaded.user.js","uuid":"54524255-2ff7-4643-af1c-2bf794cc7fc3","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBJbnN0YWdyYW0gUmVsb2FkZWQKLy8gQG5hbWVzcGFjZSAgICBodHRwOi8vZGVzcGVjaWFsLmRlCi8vIEBob21lcGFnZVVSTCAgaHR0cHM6Ly9ncmVhc3lmb3JrLm9yZy9lbi9zY3JpcHRzLzE0NzU1LWluc3RhZ3JhbS1yZWxvYWRlZAovLyBAdmVyc2lvbiAgICAgIDIuMjYKLy8gQGRlc2NyaXB0aW9uICBWaWV3IG9yIGRvd25sb2FkIHRoZSBmdWxsLXNpemUgSW5zdGFncmFtIGltYWdlL3ZpZGVvLiBTdXBlciBzaW1wbGU6IHByZXNzIGFsdCtmIG9yIHNoaWZ0ICYgY2xpY2sgdG8gdmlldyBtZWRpYSAtIGFsdCAmIGNsaWNrIHNhdmVzIGZpbGUuIFJlYWQgZm9yIG1vcmUgb3B0aW9ucy4KLy8gQGF1dGhvciAgICAgICBkZXNwZWNpYWwKLy8gQG1hdGNoICAgICAgICAqOi8vKi5pbnN0YWdyYW0uY29tLyoKLy8gQGljb24gICAgICAgICBodHRwczovL3d3dy5nb29nbGUuY29tL3MyL2Zhdmljb25zP2RvbWFpbj1pbnN0YWdyYW0uY29tCi8vIEByZXF1aXJlICAgICAgaHR0cHM6Ly9hamF4Lmdvb2dsZWFwaXMuY29tL2FqYXgvbGlicy9qcXVlcnkvMi4yLjQvanF1ZXJ5Lm1pbi5qcwovLyBAZ3JhbnQgICAgICAgIEdNX2Rvd25sb2FkCi8vID09L1VzZXJTY3JpcHQ9PQoKdmFyIGlnID0gJyNyZWFjdC1yb290IHNlY3Rpb24gbWFpbiBhcnRpY2xlID4gZGl2IFtyb2xlPSJidXR0b24iXSBkaXY6aGFzKGltZykgKyBkaXY6ZW1wdHknOyAvLyBzaW5nbGUgcGhvdG8KICAgIGlnKz0gJywgI3JlYWN0LXJvb3Qgc2VjdGlvbiBtYWluIGFydGljbGUgZGl2IGRpdiBkaXYgZGl2W3JvbGU9ImJ1dHRvbiJdJzsgLy8gc2luZ2xlIHZpZGVvCiAgICBpZys9ICcsIGRpdltyb2xlPSJkaWFsb2ciXSBhcnRpY2xlIDpub3QoaGVhZGVyKSBkaXZbcm9sZT0iYnV0dG9uIl0gZGl2OmhhcyhpbWcpICsgZGl2OmVtcHR5JzsgLy8gcG9wdXAgcGhvdG8KICAgIGlnKz0gJywgZGl2W3JvbGU9ImRpYWxvZyJdIGFydGljbGUgaGVhZGVyICsgZGl2IGRpdlthcmlhLWxhYmVsPSJDb250cm9sIl0nOyAvLyBwb3B1cC9jYXJvdXNlbCB2aWRlbwogICAgaWcrPSAnLCBkaXZbcm9sZT0iZGlhbG9nIl0gYXJ0aWNsZSB1bCBkaXY6aGFzKGltZykgKyBkaXY6ZW1wdHknOyAvLyBwb3B1cC9jYXJvdXNlbCBwaG90bwogICAgaWcrPSAnLCAjcmVhY3Qtcm9vdCBzZWN0aW9uIG1haW4gYXJ0aWNsZSB2aWRlbyc7IC8vIGlndHYgdmlkZW8KICAgIGlnKz0gJywgZGl2W3JvbGU9ImRpYWxvZyJdIGFydGljbGUgaGVhZGVyICsgZGl2ID4gZGl2IGRpdiBkaXYgZGl2IHZpZGVvJzsgLy8gcG9wdXAgaWd0diB2aWRlbwogICAgaWcrPSAnLC5FbWJlZEZyYW1lLkVtYmVkTWVkaWEnOwp2YXIgYWx0X3RyaWdnZXIgPSBpZzsKCihmdW5jdGlvbigkKXsKCmZ1bmN0aW9uIGRlc3BlY2lhbF9pZyhlLCR0aGlzLGEpIHsKICBpZighZSkgZSA9IHdpbmRvdy5ldmVudDsKICBpZihlLnNoaWZ0S2V5IHx8IGUuYWx0S2V5IHx8IGEgPT0gInJtIikgewoJIHZhciBwLHYsdmY7CiAgICAgZS5wcmV2ZW50RGVmYXVsdCgpOwogICAgaWYoJCgnZGl2W3JvbGU9ImRpYWxvZyJdIGFydGljbGUgaGVhZGVyICsgZGl2JykubGVuZ3RoICYmIGEgPT0gInJtIikgewoJICAgICB2ID0gJHRoaXMucGFyZW50KCkuZmluZCgndmlkZW8nKS5zcmM7CiBpZighdikgdmYgPSAkdGhpcy5wYXJlbnQoKS5maW5kKCd2aWRlbycpOwogICAgICAgICBwID0gJHRoaXMucGFyZW50KCkuZmluZCgnaW1nJykubGFzdCgpLmF0dHIoJ3NyYycpOwogICAJfSBlbHNlIHsKCSAgICAgdiA9ICR0aGlzLnBhcmVudCgpLmZpbmQoJ3ZpZGVvJykuYXR0cignc3JjJyk7CiBpZighdikgIHYgPSAkKCJtZXRhW3Byb3BlcnR5PSdvZzp2aWRlbyddIikuYXR0cigiY29udGVudCIpOwogaWYoIXYpIHZmID0gJHRoaXMuY2xvc2VzdCgnZGl2JykuZmluZCgndmlkZW8nKTsKIGlmKCF2ICYmICF2Zi5hdHRyKCJwb3N0ZXIiKSkgcCA9ICR0aGlzLnNpYmxpbmdzKCkuZmluZCgnaW1nJykuYXR0cignc3JjJyk7CiAgICAgICB9Cgl2YXIgZXAgPSAkdGhpcy5maW5kKCcuZWZJbWFnZScpLmNzcygnYmFja2dyb3VuZC1pbWFnZScpLAoJIHJwbGNkID0gbmV3IEFycmF5KCdYWFhYWFgnKSwKCSAgICAgdCA9IChlLmFsdEtleSkgPyAnX3NlbGYnIDogJ19ibGFuaycsCgkgICAgZnMgPSAodHlwZW9mIGVwID09PSAic3RyaW5nIiB8fCBlcCBpbnN0YW5jZW9mIFN0cmluZykgPyBlcC5yZXBsYWNlKC9edXJsXChbJyJdPyhbXiciXSspWyciXT9cKS8sJyQxJykgOiBwOwoJZm9yICh2YXIgaSA9IDA7IGkgPCBycGxjZC5sZW5ndGg7ICsraSkgewoJICB2YXIgciA9IG5ldyBSZWdFeHAocnBsY2RbaV0sJ2lnJyk7CgkgIGlmKCByLnRlc3QoZnMpICkgZnM9ZnMucmVwbGFjZShyLCcnKTsKCX0KCXZhciBpc0Nocm9tZSA9ICEhd2luZG93LmNocm9tZSAmJiAhIXdpbmRvdy5jaHJvbWUud2Vic3RvcmU7CiAgIGlmKGlzQ2hyb21lICYmIGUuYWx0S2V5KSB7CgkgIGlmKGZzKSBkaXJlY3RfZG93bmxvYWQoZnMpOwoJICBpZih2ZikgdmlkZW9fZG93bmxvYWQodmYpOwogICB9IGVsc2UgewogICAgIGlmKHYpIHsKICAgICAgICAgd2luZG93Lm9wZW4odiwgdCk7CiAgICAgICAgIHdpbmRvdy5zZXRUaW1lb3V0KHN0b3BWaWRlbywgMTAwKTsKICAgICAgICAgY29uc29sZS5sb2coIlZpZGVvIG9wZW5pbmciKTsKICAgICB9CiAgICAgaWYoIXYgJiYgdmYpIHsKICAgICAgICAgdmlkZW9fZG93bmxvYWQodmYpOwogICAgICAgICBjb25zb2xlLmxvZygiVmlkZW8yIG9wZW5pbmciKTsKICAgICB9CiAgICAgaWYoZnMpIHdpbmRvdy5vcGVuKGZzLCB0KTsKICAgfQogIH0KfQoKLyogZHluYW1pYyBkb3dubG9hZCBsaW5rICovCmZ1bmN0aW9uIGRpcmVjdF9kb3dubG9hZCh1cmwpIHsKICAgIHZhciBmaWxlbmFtZSA9IHVybC5tYXRjaCgnW14vXSokJylbMF07CiAgICB2YXIgYXJnID0geyB1cmw6IHVybCwgbmFtZTogZmlsZW5hbWUgfTsKICAgIEdNX2Rvd25sb2FkKGFyZyk7Cn0KCnZhciBjc3JmX3Rva2VuID0gJCgiYm9keSIpLmh0bWwoKS5tYXRjaCgvXCJjc3JmX3Rva2VuXCI6KD86IlteIl0qInxeW14iXSokKS8pWzBdLnJlcGxhY2UoL1wiL2csICIiKS5zcGxpdCgiOiIpWzFdOwoKZnVuY3Rpb24gdmlkZW9fZG93bmxvYWQob2JqKSB7CiAgICAkLmFqYXgoewogICAgICAgIHVybDogd2luZG93LmxvY2F0aW9uLAogICAgICAgIHR5cGU6ICdHRVQnLAogICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKHJlcykgewogICAgICAgICAgICB2YXIgdmlkZW8gPSAkKHJlcykuZmlsdGVyKCJtZXRhW3Byb3BlcnR5PSdvZzp2aWRlbyddIikuYXR0cigiY29udGVudCIpOwogICAgICAgICAgICBpZih2aWRlbykgewogICAgICAgICAgICAgJCgndmlkZW8nKS5lYWNoKGZ1bmN0aW9uKCkgeyAkKHRoaXMpLmdldCgwKS5wYXVzZSgpOyAkKHRoaXMpLmdldCgwKS5jdXJyZW50VGltZSA9IDA7IH0pOwogICAgICAgICAgICAgd2luZG93Lm9wZW4odmlkZW8sIl9ibGFuayIpOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBlcnJvcjogZnVuY3Rpb24ocmVzKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcyk7CiAgICAgICAgfQogICAgfSk7Cn0KCmZ1bmN0aW9uIGNsZWFuRmlsZW5hbWUoZmlsZSkgewogICByZXR1cm4gZmlsZS5yZXBsYWNlKCJqcGciLCJtcDQiKS5zcGxpdCgiPyIpWzBdLnNwbGl0KCcvJykucG9wKCk7Cn0KCmZ1bmN0aW9uIHN0b3BWaWRlbygpIHsKICAgICQoJ3ZpZGVvJykuZWFjaChmdW5jdGlvbigpIHsgJCh0aGlzKS5nZXQoMCkucGF1c2UoKTsgJCh0aGlzKS5nZXQoMCkuY3VycmVudFRpbWUgPSAwOyB9KTsKfQoKLyogbGVmdC1jbGljayBhbmQgaG9sZCBzaGlmdCBrZXkgdG8gb3BlbiBkZXNpcmVkIGl0ZW0gKi8KJChkb2N1bWVudCkub24oJ2NsaWNrJyxpZyxmdW5jdGlvbihlLGEpIHsKCWRlc3BlY2lhbF9pZyhlLCQodGhpcyksYSk7Cn0pOwoKLyoga2V5Ym9hcmQgc2hvcnRjdXQgYWx0K2YodWxsc2l6ZSkgd29ya3Mgb24gdmlkZW8gcG9wdXAsIHNpbmdsZSBwaG90bywgc2luZ2xlIHZpZGVvIHBhZ2VzICovCiQoZG9jdW1lbnQpLmRlbGVnYXRlKGFsdF90cmlnZ2VyLCdpZ19wcmVzcycsZnVuY3Rpb24oZSxhKSB7CiAgICBkZXNwZWNpYWxfaWcoZSwkKHRoaXMpLGEpOwp9KTsKCmRvY3VtZW50Lm9ua2V5ZG93biA9IGZ1bmN0aW9uKGUpewogICAgZSA9IGUgfHwgZXZlbnQ7CiAgICBpZiAoZS5hbHRLZXkgJiYgZS5rZXlDb2RlPT03MCkgJChhbHRfdHJpZ2dlcikudHJpZ2dlcignaWdfcHJlc3MnLFsncm0nXSk7Cn07Cgp9KShqUXVlcnkpOwo=","requires":[{"meta":{"name":"jquery.min.js","url":"https://ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js","ts":1588688735572,"mimetype":"text/javascript"},"source":""}]},{"name":"Twitter Image Download Button","options":{"check_for_updates":true,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_arrayleft":false,"compat_uW_gmonkey":false,"compat_forvarin":false,"noframes":null,"awareOfChrome":false,"run_at":null,"override":{"use_includes":[],"orig_includes":[],"merge_includes":true,"use_matches":[],"orig_matches":["https://twitter.com/*","https://mobile.twitter.com/*"],"merge_matches":true,"use_excludes":[],"orig_excludes":[],"merge_excludes":true,"use_connects":[],"merge_connects":true,"use_blockers":[],"orig_run_at":"document-idle","orig_noframes":null}},"storage":{"data":{},"ts":1574009788362},"enabled":true,"position":7,"file_url":"https://openuserjs.org/install/Frederick888/Twitter_Image_Download_Button.user.js","uuid":"cc1912be-73f1-433a-9c38-f920d41d8965","source":"","requires":[{"meta":{"name":"FileSaver.min.js","url":"https://onee3.org/libs/fileserver/2.0.2/FileSaver.min.js","ts":1588613142303,"mimetype":"text/javascript"},"source":"KGZ1bmN0aW9uKGEsYil7aWYoImZ1bmN0aW9uIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZClkZWZpbmUoW10sYik7ZWxzZSBpZigidW5kZWZpbmVkIiE9dHlwZW9mIGV4cG9ydHMpYigpO2Vsc2V7YigpLGEuRmlsZVNhdmVyPXtleHBvcnRzOnt9fS5leHBvcnRzfX0pKHRoaXMsZnVuY3Rpb24oKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gYihhLGIpe3JldHVybiJ1bmRlZmluZWQiPT10eXBlb2YgYj9iPXthdXRvQm9tOiExfToib2JqZWN0IiE9dHlwZW9mIGImJihjb25zb2xlLndhcm4oIkRlcHJlY2F0ZWQ6IEV4cGVjdGVkIHRoaXJkIGFyZ3VtZW50IHRvIGJlIGEgb2JqZWN0IiksYj17YXV0b0JvbTohYn0pLGIuYXV0b0JvbSYmL15ccyooPzp0ZXh0XC9cUyp8YXBwbGljYXRpb25cL3htbHxcUypcL1xTKlwreG1sKVxzKjsuKmNoYXJzZXRccyo9XHMqdXRmLTgvaS50ZXN0KGEudHlwZSk/bmV3IEJsb2IoWyJcdUZFRkYiLGFdLHt0eXBlOmEudHlwZX0pOmF9ZnVuY3Rpb24gYyhiLGMsZCl7dmFyIGU9bmV3IFhNTEh0dHBSZXF1ZXN0O2Uub3BlbigiR0VUIixiKSxlLnJlc3BvbnNlVHlwZT0iYmxvYiIsZS5vbmxvYWQ9ZnVuY3Rpb24oKXthKGUucmVzcG9uc2UsYyxkKX0sZS5vbmVycm9yPWZ1bmN0aW9uKCl7Y29uc29sZS5lcnJvcigiY291bGQgbm90IGRvd25sb2FkIGZpbGUiKX0sZS5zZW5kKCl9ZnVuY3Rpb24gZChhKXt2YXIgYj1uZXcgWE1MSHR0cFJlcXVlc3Q7Yi5vcGVuKCJIRUFEIixhLCExKTt0cnl7Yi5zZW5kKCl9Y2F0Y2goYSl7fXJldHVybiAyMDA8PWIuc3RhdHVzJiYyOTk+PWIuc3RhdHVzfWZ1bmN0aW9uIGUoYSl7dHJ5e2EuZGlzcGF0Y2hFdmVudChuZXcgTW91c2VFdmVudCgiY2xpY2siKSl9Y2F0Y2goYyl7dmFyIGI9ZG9jdW1lbnQuY3JlYXRlRXZlbnQoIk1vdXNlRXZlbnRzIik7Yi5pbml0TW91c2VFdmVudCgiY2xpY2siLCEwLCEwLHdpbmRvdywwLDAsMCw4MCwyMCwhMSwhMSwhMSwhMSwwLG51bGwpLGEuZGlzcGF0Y2hFdmVudChiKX19dmFyIGY9Im9iamVjdCI9PXR5cGVvZiB3aW5kb3cmJndpbmRvdy53aW5kb3c9PT13aW5kb3c/d2luZG93OiJvYmplY3QiPT10eXBlb2Ygc2VsZiYmc2VsZi5zZWxmPT09c2VsZj9zZWxmOiJvYmplY3QiPT10eXBlb2YgZ2xvYmFsJiZnbG9iYWwuZ2xvYmFsPT09Z2xvYmFsP2dsb2JhbDp2b2lkIDAsYT1mLnNhdmVBc3x8KCJvYmplY3QiIT10eXBlb2Ygd2luZG93fHx3aW5kb3chPT1mP2Z1bmN0aW9uKCl7fToiZG93bmxvYWQiaW4gSFRNTEFuY2hvckVsZW1lbnQucHJvdG90eXBlP2Z1bmN0aW9uKGIsZyxoKXt2YXIgaT1mLlVSTHx8Zi53ZWJraXRVUkwsaj1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJhIik7Zz1nfHxiLm5hbWV8fCJkb3dubG9hZCIsai5kb3dubG9hZD1nLGoucmVsPSJub29wZW5lciIsInN0cmluZyI9PXR5cGVvZiBiPyhqLmhyZWY9YixqLm9yaWdpbj09PWxvY2F0aW9uLm9yaWdpbj9lKGopOmQoai5ocmVmKT9jKGIsZyxoKTplKGosai50YXJnZXQ9Il9ibGFuayIpKTooai5ocmVmPWkuY3JlYXRlT2JqZWN0VVJMKGIpLHNldFRpbWVvdXQoZnVuY3Rpb24oKXtpLnJldm9rZU9iamVjdFVSTChqLmhyZWYpfSw0RTQpLHNldFRpbWVvdXQoZnVuY3Rpb24oKXtlKGopfSwwKSl9OiJtc1NhdmVPck9wZW5CbG9iImluIG5hdmlnYXRvcj9mdW5jdGlvbihmLGcsaCl7aWYoZz1nfHxmLm5hbWV8fCJkb3dubG9hZCIsInN0cmluZyIhPXR5cGVvZiBmKW5hdmlnYXRvci5tc1NhdmVPck9wZW5CbG9iKGIoZixoKSxnKTtlbHNlIGlmKGQoZikpYyhmLGcsaCk7ZWxzZXt2YXIgaT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KCJhIik7aS5ocmVmPWYsaS50YXJnZXQ9Il9ibGFuayIsc2V0VGltZW91dChmdW5jdGlvbigpe2UoaSl9KX19OmZ1bmN0aW9uKGEsYixkLGUpe2lmKGU9ZXx8b3BlbigiIiwiX2JsYW5rIiksZSYmKGUuZG9jdW1lbnQudGl0bGU9ZS5kb2N1bWVudC5ib2R5LmlubmVyVGV4dD0iZG93bmxvYWRpbmcuLi4iKSwic3RyaW5nIj09dHlwZW9mIGEpcmV0dXJuIGMoYSxiLGQpO3ZhciBnPSJhcHBsaWNhdGlvbi9vY3RldC1zdHJlYW0iPT09YS50eXBlLGg9L2NvbnN0cnVjdG9yL2kudGVzdChmLkhUTUxFbGVtZW50KXx8Zi5zYWZhcmksaT0vQ3JpT1NcL1tcZF0rLy50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpO2lmKChpfHxnJiZoKSYmIm9iamVjdCI9PXR5cGVvZiBGaWxlUmVhZGVyKXt2YXIgaj1uZXcgRmlsZVJlYWRlcjtqLm9ubG9hZGVuZD1mdW5jdGlvbigpe3ZhciBhPWoucmVzdWx0O2E9aT9hOmEucmVwbGFjZSgvXmRhdGE6W147XSo7LywiZGF0YTphdHRhY2htZW50L2ZpbGU7IiksZT9lLmxvY2F0aW9uLmhyZWY9YTpsb2NhdGlvbj1hLGU9bnVsbH0sai5yZWFkQXNEYXRhVVJMKGEpfWVsc2V7dmFyIGs9Zi5VUkx8fGYud2Via2l0VVJMLGw9ay5jcmVhdGVPYmplY3RVUkwoYSk7ZT9lLmxvY2F0aW9uPWw6bG9jYXRpb24uaHJlZj1sLGU9bnVsbCxzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ay5yZXZva2VPYmplY3RVUkwobCl9LDRFNCl9fSk7Zi5zYXZlQXM9YS5zYXZlQXM9YSwidW5kZWZpbmVkIiE9dHlwZW9mIG1vZHVsZSYmKG1vZHVsZS5leHBvcnRzPWEpfSk7CgovLyMgc291cmNlTWFwcGluZ1VSTD1GaWxlU2F2ZXIubWluLmpzLm1hcA=="},{"meta":{"name":"jszip.min.js","url":"https://onee3.org/libs/jszip/3.2.2/jszip.min.js","ts":1588613142317,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"jszip-utils.min.js","url":"https://onee3.org/libs/jszip-utils/0.1.0/jszip-utils.min.js","ts":1588613142299,"mimetype":"text/javascript"},"source":"IWZ1bmN0aW9uKGUpeyJvYmplY3QiPT10eXBlb2YgZXhwb3J0cz9tb2R1bGUuZXhwb3J0cz1lKCk6ImZ1bmN0aW9uIj09dHlwZW9mIGRlZmluZSYmZGVmaW5lLmFtZD9kZWZpbmUoZSk6InVuZGVmaW5lZCIhPXR5cGVvZiB3aW5kb3c/d2luZG93LkpTWmlwVXRpbHM9ZSgpOiJ1bmRlZmluZWQiIT10eXBlb2YgZ2xvYmFsP2dsb2JhbC5KU1ppcFV0aWxzPWUoKToidW5kZWZpbmVkIiE9dHlwZW9mIHNlbGYmJihzZWxmLkpTWmlwVXRpbHM9ZSgpKX0oZnVuY3Rpb24oKXtyZXR1cm4gZnVuY3Rpb24gbyhpLGYsdSl7ZnVuY3Rpb24gcyhuLGUpe2lmKCFmW25dKXtpZighaVtuXSl7dmFyIHQ9ImZ1bmN0aW9uIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmU7aWYoIWUmJnQpcmV0dXJuIHQobiwhMCk7aWYoYSlyZXR1cm4gYShuLCEwKTt0aHJvdyBuZXcgRXJyb3IoIkNhbm5vdCBmaW5kIG1vZHVsZSAnIituKyInIil9dmFyIHI9ZltuXT17ZXhwb3J0czp7fX07aVtuXVswXS5jYWxsKHIuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgdD1pW25dWzFdW2VdO3JldHVybiBzKHR8fGUpfSxyLHIuZXhwb3J0cyxvLGksZix1KX1yZXR1cm4gZltuXS5leHBvcnRzfWZvcih2YXIgYT0iZnVuY3Rpb24iPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZSxlPTA7ZTx1Lmxlbmd0aDtlKyspcyh1W2VdKTtyZXR1cm4gc30oezE6W2Z1bmN0aW9uKGUsdCxuKXsidXNlIHN0cmljdCI7dmFyIHU9e307ZnVuY3Rpb24gcigpe3RyeXtyZXR1cm4gbmV3IHdpbmRvdy5YTUxIdHRwUmVxdWVzdH1jYXRjaChlKXt9fXUuX2dldEJpbmFyeUZyb21YSFI9ZnVuY3Rpb24oZSl7cmV0dXJuIGUucmVzcG9uc2V8fGUucmVzcG9uc2VUZXh0fTt2YXIgcz0idW5kZWZpbmVkIiE9dHlwZW9mIHdpbmRvdyYmd2luZG93LkFjdGl2ZVhPYmplY3Q/ZnVuY3Rpb24oKXtyZXR1cm4gcigpfHxmdW5jdGlvbigpe3RyeXtyZXR1cm4gbmV3IHdpbmRvdy5BY3RpdmVYT2JqZWN0KCJNaWNyb3NvZnQuWE1MSFRUUCIpfWNhdGNoKGUpe319KCl9OnI7dS5nZXRCaW5hcnlDb250ZW50PWZ1bmN0aW9uKHQsbil7dmFyIGUscixvLGk7ImZ1bmN0aW9uIj09dHlwZW9mKG49bnx8e30pPyhpPW4sbj17fSk6ImZ1bmN0aW9uIj09dHlwZW9mIG4uY2FsbGJhY2smJihpPW4uY2FsbGJhY2spLGl8fCJ1bmRlZmluZWQiPT10eXBlb2YgUHJvbWlzZT8ocj1mdW5jdGlvbihlKXtpKG51bGwsZSl9LG89ZnVuY3Rpb24oZSl7aShlLG51bGwpfSk6ZT1uZXcgUHJvbWlzZShmdW5jdGlvbihlLHQpe3I9ZSxvPXR9KTt0cnl7dmFyIGY9cygpO2Yub3BlbigiR0VUIix0LCEwKSwicmVzcG9uc2VUeXBlImluIGYmJihmLnJlc3BvbnNlVHlwZT0iYXJyYXlidWZmZXIiKSxmLm92ZXJyaWRlTWltZVR5cGUmJmYub3ZlcnJpZGVNaW1lVHlwZSgidGV4dC9wbGFpbjsgY2hhcnNldD14LXVzZXItZGVmaW5lZCIpLGYub25yZWFkeXN0YXRlY2hhbmdlPWZ1bmN0aW9uKGUpe2lmKDQ9PT1mLnJlYWR5U3RhdGUpaWYoMjAwPT09Zi5zdGF0dXN8fDA9PT1mLnN0YXR1cyl0cnl7cih1Ll9nZXRCaW5hcnlGcm9tWEhSKGYpKX1jYXRjaChlKXtvKG5ldyBFcnJvcihlKSl9ZWxzZSBvKG5ldyBFcnJvcigiQWpheCBlcnJvciBmb3IgIit0KyIgOiAiK3RoaXMuc3RhdHVzKyIgIit0aGlzLnN0YXR1c1RleHQpKX0sbi5wcm9ncmVzcyYmKGYub25wcm9ncmVzcz1mdW5jdGlvbihlKXtuLnByb2dyZXNzKHtwYXRoOnQsb3JpZ2luYWxFdmVudDplLHBlcmNlbnQ6ZS5sb2FkZWQvZS50b3RhbCoxMDAsbG9hZGVkOmUubG9hZGVkLHRvdGFsOmUudG90YWx9KX0pLGYuc2VuZCgpfWNhdGNoKGUpe28obmV3IEVycm9yKGUpLG51bGwpfXJldHVybiBlfSx0LmV4cG9ydHM9dX0se31dfSx7fSxbMV0pKDEpfSk7"}]},{"name":"DonwloadImageDiscord","options":{"check_for_updates":true,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_arrayleft":false,"compat_uW_gmonkey":false,"compat_forvarin":false,"noframes":null,"awareOfChrome":false,"run_at":null,"override":{"use_includes":[],"orig_includes":[],"merge_includes":true,"use_matches":[],"orig_matches":["https://cdn.discordapp.com/attachments/*","https://pbs.twimg.com/media/*"],"merge_matches":true,"use_excludes":[],"orig_excludes":[],"merge_excludes":true,"use_connects":[],"merge_connects":true,"use_blockers":[],"orig_run_at":"document-idle","orig_noframes":null}},"storage":{"data":{},"ts":1574009788392},"enabled":true,"position":8,"uuid":"3fc344c3-ac81-4e85-9f3d-99155ba2a3f7","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBEb253bG9hZEltYWdlRGlzY29yZAovLyBAdmVyc2lvbiAgICAgIDEuMAovLyBAZGVzY3JpcHRpb24gIFNob3cgYSBidXR0b24gdG8gZG93bmxvYWQgaW1hZ2UgZWFzbHkKLy8gQGF1dGhvciAgICAgICBhcmdvcmFyCi8vIEBsaWNlbnNlICAgICAgR1BMLTMuMC1vci1sYXRlcgovLyBAbWF0Y2ggICAgICAgIGh0dHBzOi8vY2RuLmRpc2NvcmRhcHAuY29tL2F0dGFjaG1lbnRzLyoKLy8gQG1hdGNoICAgICAgICBodHRwczovL3Bicy50d2ltZy5jb20vbWVkaWEvKgovLyBAZ3JhbnQgICAgICAgIG5vbmUKLy8gQHJlcXVpcmUgICAgICBodHRwczovL29uZWUzLm9yZy9saWJzL2ZpbGVzZXJ2ZXIvMS4zLjMvRmlsZVNhdmVyLm1pbi5qcwovLyBAcmVxdWlyZSAgICAgIGh0dHBzOi8vb25lZTMub3JnL2xpYnMvanF1ZXJ5LzMuMy4xL2pxdWVyeS5taW4uanMKLy8gPT0vVXNlclNjcmlwdD09CgpmdW5jdGlvbiBmaWxlX21pbWUoZmlsZW5hbWUpIHsKICAgIGxldCBleHRlbnNpb24gPSBmaWxlbmFtZS5yZXBsYWNlKC8uKihcLlx3KykkL2csICIkMSIpOwogICAgc3dpdGNoIChleHRlbnNpb24pIHsKICAgICAgICBjYXNlICIuanBnIjoKICAgICAgICBjYXNlICIuanBlZyI6CiAgICAgICAgY2FzZSAiLmpwZSI6CiAgICAgICAgICAgIHJldHVybiAiaW1hZ2UvanBlZyI7CiAgICAgICAgY2FzZSAiLmdpZiI6CiAgICAgICAgICAgIHJldHVybiAiaW1hZ2UvZ2lmIjsKICAgICAgICBjYXNlICIucG5nIjoKICAgICAgICAgICAgcmV0dXJuICJpbWFnZS9wbmciOwogICAgICAgIGRlZmF1bHQ6CiAgICAgICAgICAgIHJldHVybiAiIjsKICAgIH0KfQoKZnVuY3Rpb24gZG9ud2xvYWRfaW1hZ2UoaW1hZ2VfdXJsKXsKICAgIGNvbnNvbGUubG9nKCdEb3dubG9hZGluZyAnICsgaW1hZ2VfdXJsKTsKICAgIGxldCB4aHIgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTsKICAgIHhoci5vcGVuKCJHRVQiLCBpbWFnZV91cmwsIHRydWUpOwogICAgeGhyLnJlc3BvbnNlVHlwZSA9ICJhcnJheWJ1ZmZlciI7CiAgICB4aHIub25sb2FkID0gZnVuY3Rpb24gKGV2KSB7CiAgICAgICAgbGV0IGZpbGVuYW1lID0gaW1hZ2VfdXJsLnJlcGxhY2UoLy4qXC8vLCAnJyk7CiAgICAgICAgbGV0IGJsb2IgPSBuZXcgQmxvYihbeGhyLnJlc3BvbnNlXSwgewogICAgICAgICAgICB0eXBlOiBmaWxlX21pbWUoZmlsZW5hbWUpCiAgICAgICAgfSk7CiAgICAgICAgc2F2ZUFzKGJsb2IsIGZpbGVuYW1lKTsKICAgIH07CiAgICB4aHIuc2VuZCgpOwp9CgooZnVuY3Rpb24oKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgYnV0dG9uID0gJCgiPGJ1dHRvbiBjbGFzcz0nYnRuJz48L2J1dHRvbj4iKS50ZXh0KCJEZXNjYXJnYXIiKTsKICAgICQoImJvZHkiKS5wcmVwZW5kKGJ1dHRvbik7CiAgICAkKCJidXR0b24iKS5jbGljayhmdW5jdGlvbigpIHsKICAgICAgICBsZXQgdXJsID0gd2luZG93LmxvY2F0aW9uLmhyZWY7CiAgICAgICAgZG9ud2xvYWRfaW1hZ2UodXJsKTsKICAgIH0pOwp9KSgpOw==","requires":[{"meta":{"name":"FileSaver.min.js","url":"https://onee3.org/libs/fileserver/1.3.3/FileSaver.min.js","ts":1588179975661,"mimetype":"text/javascript"},"source":"LyohIEBzb3VyY2UgaHR0cDovL3B1cmwuZWxpZ3JleS5jb20vZ2l0aHViL0ZpbGVTYXZlci5qcy9ibG9iL21hc3Rlci9GaWxlU2F2ZXIuanMgKi8KdmFyIHNhdmVBcz1zYXZlQXN8fGZ1bmN0aW9uKGUpeyJ1c2Ugc3RyaWN0IjtpZih0eXBlb2YgZT09PSJ1bmRlZmluZWQifHx0eXBlb2YgbmF2aWdhdG9yIT09InVuZGVmaW5lZCImJi9NU0lFIFsxLTldXC4vLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCkpe3JldHVybn12YXIgdD1lLmRvY3VtZW50LG49ZnVuY3Rpb24oKXtyZXR1cm4gZS5VUkx8fGUud2Via2l0VVJMfHxlfSxyPXQuY3JlYXRlRWxlbWVudE5TKCJodHRwOi8vd3d3LnczLm9yZy8xOTk5L3hodG1sIiwiYSIpLG89ImRvd25sb2FkImluIHIsYT1mdW5jdGlvbihlKXt2YXIgdD1uZXcgTW91c2VFdmVudCgiY2xpY2siKTtlLmRpc3BhdGNoRXZlbnQodCl9LGk9L2NvbnN0cnVjdG9yL2kudGVzdChlLkhUTUxFbGVtZW50KXx8ZS5zYWZhcmksZj0vQ3JpT1NcL1tcZF0rLy50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpLHU9ZnVuY3Rpb24odCl7KGUuc2V0SW1tZWRpYXRlfHxlLnNldFRpbWVvdXQpKGZ1bmN0aW9uKCl7dGhyb3cgdH0sMCl9LHM9ImFwcGxpY2F0aW9uL29jdGV0LXN0cmVhbSIsZD0xZTMqNDAsYz1mdW5jdGlvbihlKXt2YXIgdD1mdW5jdGlvbigpe2lmKHR5cGVvZiBlPT09InN0cmluZyIpe24oKS5yZXZva2VPYmplY3RVUkwoZSl9ZWxzZXtlLnJlbW92ZSgpfX07c2V0VGltZW91dCh0LGQpfSxsPWZ1bmN0aW9uKGUsdCxuKXt0PVtdLmNvbmNhdCh0KTt2YXIgcj10Lmxlbmd0aDt3aGlsZShyLS0pe3ZhciBvPWVbIm9uIit0W3JdXTtpZih0eXBlb2Ygbz09PSJmdW5jdGlvbiIpe3RyeXtvLmNhbGwoZSxufHxlKX1jYXRjaChhKXt1KGEpfX19fSxwPWZ1bmN0aW9uKGUpe2lmKC9eXHMqKD86dGV4dFwvXFMqfGFwcGxpY2F0aW9uXC94bWx8XFMqXC9cUypcK3htbClccyo7LipjaGFyc2V0XHMqPVxzKnV0Zi04L2kudGVzdChlLnR5cGUpKXtyZXR1cm4gbmV3IEJsb2IoW1N0cmluZy5mcm9tQ2hhckNvZGUoNjUyNzkpLGVdLHt0eXBlOmUudHlwZX0pfXJldHVybiBlfSx2PWZ1bmN0aW9uKHQsdSxkKXtpZighZCl7dD1wKHQpfXZhciB2PXRoaXMsdz10LnR5cGUsbT13PT09cyx5LGg9ZnVuY3Rpb24oKXtsKHYsIndyaXRlc3RhcnQgcHJvZ3Jlc3Mgd3JpdGUgd3JpdGVlbmQiLnNwbGl0KCIgIikpfSxTPWZ1bmN0aW9uKCl7aWYoKGZ8fG0mJmkpJiZlLkZpbGVSZWFkZXIpe3ZhciByPW5ldyBGaWxlUmVhZGVyO3Iub25sb2FkZW5kPWZ1bmN0aW9uKCl7dmFyIHQ9Zj9yLnJlc3VsdDpyLnJlc3VsdC5yZXBsYWNlKC9eZGF0YTpbXjtdKjsvLCJkYXRhOmF0dGFjaG1lbnQvZmlsZTsiKTt2YXIgbj1lLm9wZW4odCwiX2JsYW5rIik7aWYoIW4pZS5sb2NhdGlvbi5ocmVmPXQ7dD11bmRlZmluZWQ7di5yZWFkeVN0YXRlPXYuRE9ORTtoKCl9O3IucmVhZEFzRGF0YVVSTCh0KTt2LnJlYWR5U3RhdGU9di5JTklUO3JldHVybn1pZigheSl7eT1uKCkuY3JlYXRlT2JqZWN0VVJMKHQpfWlmKG0pe2UubG9jYXRpb24uaHJlZj15fWVsc2V7dmFyIG89ZS5vcGVuKHksIl9ibGFuayIpO2lmKCFvKXtlLmxvY2F0aW9uLmhyZWY9eX19di5yZWFkeVN0YXRlPXYuRE9ORTtoKCk7Yyh5KX07di5yZWFkeVN0YXRlPXYuSU5JVDtpZihvKXt5PW4oKS5jcmVhdGVPYmplY3RVUkwodCk7c2V0VGltZW91dChmdW5jdGlvbigpe3IuaHJlZj15O3IuZG93bmxvYWQ9dTthKHIpO2goKTtjKHkpO3YucmVhZHlTdGF0ZT12LkRPTkV9KTtyZXR1cm59UygpfSx3PXYucHJvdG90eXBlLG09ZnVuY3Rpb24oZSx0LG4pe3JldHVybiBuZXcgdihlLHR8fGUubmFtZXx8ImRvd25sb2FkIixuKX07aWYodHlwZW9mIG5hdmlnYXRvciE9PSJ1bmRlZmluZWQiJiZuYXZpZ2F0b3IubXNTYXZlT3JPcGVuQmxvYil7cmV0dXJuIGZ1bmN0aW9uKGUsdCxuKXt0PXR8fGUubmFtZXx8ImRvd25sb2FkIjtpZighbil7ZT1wKGUpfXJldHVybiBuYXZpZ2F0b3IubXNTYXZlT3JPcGVuQmxvYihlLHQpfX13LmFib3J0PWZ1bmN0aW9uKCl7fTt3LnJlYWR5U3RhdGU9dy5JTklUPTA7dy5XUklUSU5HPTE7dy5ET05FPTI7dy5lcnJvcj13Lm9ud3JpdGVzdGFydD13Lm9ucHJvZ3Jlc3M9dy5vbndyaXRlPXcub25hYm9ydD13Lm9uZXJyb3I9dy5vbndyaXRlZW5kPW51bGw7cmV0dXJuIG19KHR5cGVvZiBzZWxmIT09InVuZGVmaW5lZCImJnNlbGZ8fHR5cGVvZiB3aW5kb3chPT0idW5kZWZpbmVkIiYmd2luZG93fHx0aGlzLmNvbnRlbnQpO2lmKHR5cGVvZiBtb2R1bGUhPT0idW5kZWZpbmVkIiYmbW9kdWxlLmV4cG9ydHMpe21vZHVsZS5leHBvcnRzLnNhdmVBcz1zYXZlQXN9ZWxzZSBpZih0eXBlb2YgZGVmaW5lIT09InVuZGVmaW5lZCImJmRlZmluZSE9PW51bGwmJmRlZmluZS5hbWQhPT1udWxsKXtkZWZpbmUoIkZpbGVTYXZlci5qcyIsZnVuY3Rpb24oKXtyZXR1cm4gc2F2ZUFzfSl9Cg=="},{"meta":{"name":"jquery.min.js","url":"https://onee3.org/libs/jquery/3.3.1/jquery.min.js","ts":1588179975440,"mimetype":"text/javascript"},"source":""}]}]}